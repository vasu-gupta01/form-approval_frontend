{"version":3,"sources":["services/auth.service.js","services/auth-header.js","services/user.service.js","components/Loading.js","components/ExportToExcel.js","components/Home.js","components/ManageUsers.js","components/UserDetails.js","components/FormResult.js","components/Signup.js","components/mod/ManageRoles.js","components/mod/RoleCreate.js","components/mod/DepartmentCreate.js","components/mod/RoleDetails.js","components/mod/ManageForms.js","components/mod/FormDetails.js","components/mod/FormCreate.js","components/Dashboard.js","components/HomeMod.js","images/Beta-HealthcareLG-Trebuchet-MS-font.png","components/FormApproval.js","components/Login.js","App.js","index.js","config/config.js"],"names":["API_URL","config","ADDR","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","role","parse","getItem","authHeader","user","body","headers","get","Loading","className","ExportToExcel","apiData","fileName","onClick","e","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","timeStamp","date1","date2","val","date_val","Date","getTime","Math","floor","DateRange","props","disableClock","maxDate","toDate","value","fromDate","onChange","setHours","setDateChange","format","handleDateChange","ApprovalRequestsList","forms","length","htmlFor","id","handleShowAll","createExcelData","slice","reverse","map","to","_id","style","display","showAll","show","filled_by","date_submitted","form","name","getApprovalStatuses","approval","app","status","message","return_data","f","dis","a","push","approver","obj","concat","Moment","approvals","Home","mDate","state","currentUser","AuthService","getCurrentUser","dbRequests","bind","this","getRequests","UserService","getApprovalRequests","min_date","max_date","res","db_data","d","pending","setState","catch","from","Component","UsersList","users","pathname","description","ManageUsers","useState","setUsers","useEffect","getUsers","UserDetails","useLocation","roles","setRoles","setFirstname","setLastname","setUsername","email","setEmail","setRole","setPassword","clicked_create","setClickedCreate","error","setError","missingField","setMissingField","getRoles","onSubmit","preventDefault","updateApprover","window","location","replace","target","disabled","class","aria-hidden","FormResult","Modal","dialogClassName","Header","Title","Body","Footer","as","hideModal","Signup","invalidLogin","handleSignup","handleChange","field","register","selected","RolesList","level","ManageRoles","RoleCreate","department","field_missing","departments","handleCreate","getDepartments","desc","dep","lvl","createRole","placeholder","DepartmentCreate","new_departments","counter","handleNewChange","handleUpdatedChange","handleDelete","handleAdd","resp","deps","new_dep_data","missing_err","new_departs","Object","keys","update_dep_data","update_departs","console","log","createDepartment","updateDepartment","new_deps","count","RoleDetails","setDepartments","setDescription","setName","setLevel","setDepartment","updateRole","FormsList","date_created","finals","ManageForms","setForms","getForms","FormFieldsEdit","fields","setFields","handleFieldNameChange","handleFieldTypeChange","fieldTypes","field_type","checked","required","handleRequiredChange","FormDetails","setFieldTypes","level_one","setLevelOne","level_two","setLevelTwo","level_three","setLevelThree","setFinalApprovers","setListOfApprovers","getFieldTypes","new_fields","stages","s","getApprovers","approvers","fields_array","fields_error","1","2","3","updateForm","autoComplete","field_id","current_fields","new_field","FormCreate","handleAddFinalApprover","current_approvers","final_approvers","list_of_approvers","nm","approvers_array","createForm","ApprovalRequestsDisplay","final_approval","approval_date","Dashboard","showDate","loading","today","setDate","getDate","getDateRequests","exact","path","component","FormApproval","useHistory","useParams","formData","setFormData","formDate","setFormDate","formApproved","setFormApproved","formStatus","setFormStatus","formComments","setFormComments","clickedApprove","setClickedApprove","clickedDisapprove","setClickedDisapprove","appError","setAppError","isMounted","getApprovalRequest","comments","err","src","logo","alt","readOnly","height","request_id","action","updateApproval","Login","clicked_login","handleLogin","onChangeUsername","onChangePassword","login","reload","App","logout","HomeMod","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.d47e0b8a.chunk.js","sourcesContent":["import axios from \"axios\";\nimport config from \"../config/config\";\n\nconst API_URL = config.ADDR + \"/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", { username, password })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, firstname, lastname, role, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      firstname,\n      lastname,\n      role,\n      password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n}\n\nexport default new AuthService();\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    return { \"x-access-token\": user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport config from \"../config/config\";\n\nconst API_URL = \"/api/\";\n\nclass UserService {\n  getDateRequests(body) {\n    return axios.post(API_URL + \"dashapprovalrequests\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  getApprovalRequests(body) {\n    return axios.post(API_URL + \"getapprovalrequests\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  getUsers() {\n    return axios.get(API_URL + \"getapprovers\", {\n      headers: authHeader(),\n    });\n  }\n\n  getApprovers() {\n    return axios.get(API_URL + \"getapproverswithoutmod\", {\n      headers: authHeader(),\n    });\n  }\n\n  getRoles() {\n    return axios.get(API_URL + \"getroles\", { headers: authHeader() });\n  }\n\n  getDepartments() {\n    return axios.get(API_URL + \"getdepartments\", { headers: authHeader() });\n  }\n\n  updateApproval(body) {\n    return axios.post(API_URL + \"updateapproval\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updateApprover(body) {\n    return axios.post(API_URL + \"approver/update\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updateRole(body) {\n    return axios.post(API_URL + \"role/update\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  createRole(body) {\n    return axios.post(API_URL + \"createrole\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  createDepartment(body) {\n    return axios.post(API_URL + \"createdepartment\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updateDepartment(body) {\n    return axios.post(API_URL + \"updatedepartment\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  createForm(body) {\n    return axios.post(API_URL + \"createform\", body, { headers: authHeader() });\n  }\n\n  getApprovalRequest(body) {\n    return axios.post(API_URL + \"getapprovalrequest\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  getForms() {\n    return axios.get(API_URL + \"getforms\", { headers: authHeader() });\n  }\n\n  getFieldTypes() {\n    return axios.get(API_URL + \"getfieldtypes\", { headers: authHeader() });\n  }\n\n  updateForm(body) {\n    return axios.post(API_URL + \"updateform\", body, { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function Loading() {\n  return (\n    <div className=\"d-flex justify-content-center text-center text-light\">\n      <div className=\"row\">\n        <div className=\"col-12 mb-2\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <strong className=\"\">Loading...</strong>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Code snippet from - https://dev.to/jasurkurbanovinit/how-to-export-data-to-excel-from-api-using-react-25go\n\nimport React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      className=\"btn btn-outline-success\"\n      onClick={(e) => exportToCSV(apiData, fileName)}\n    >\n      Export to Excel\n    </button>\n  );\n};\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nimport \"../App.css\";\nimport Loading from \"./Loading\";\nimport { ExportToExcel } from \"./ExportToExcel\";\nimport Moment from \"moment\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    const mDate = new Date();\n    mDate.setHours(0, 0, 0, 0);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser(),\n      dbRequests: [],\n      showAll: false,\n      fromDate: mDate,\n      toDate: new Date(),\n    };\n\n    this.handleShowAll = this.handleShowAll.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.setDateChange = this.setDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    //    api\n    //      .get(\"/api/getapprovalrequests\")\n    //      .then((res) => {\n    //        if (res.data) {\n    //          this.setState({ dbRequests: res.data });\n    //        }\n    //      })\n    //      .catch();\n    this.getRequests();\n  }\n\n  getRequests() {\n    UserService.getApprovalRequests({\n      min_date: this.state.fromDate,\n      max_date: this.state.toDate,\n    })\n      .then((res) => {\n        if (res.data) {\n          let db_data = [];\n          for (let d of res.data) {\n            let pending = 0;\n            for (let app of d.approval) {\n              if (app.approver._id === AuthService.getCurrentUser().id) {\n                pending += app.status;\n              }\n            }\n            if (pending === 0) {\n              db_data.push({ ...d, show: true });\n            } else {\n              db_data.push({ ...d, show: false });\n            }\n          }\n\n          this.setState({ dbRequests: db_data });\n        }\n      })\n      .catch();\n  }\n\n  handleShowAll() {\n    this.setState({ showAll: !this.state.showAll });\n  }\n\n  handleDateChange() {\n    this.getRequests();\n  }\n\n  setDateChange(from, to) {\n    this.setState({ fromDate: from, toDate: to });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div>\n        <div className=\"container d-flex align-items-center justify-content-center\">\n          <DateRange\n            fromDate={this.state.fromDate}\n            toDate={this.state.toDate}\n            handleDateChange={this.handleDateChange}\n            setDateChange={this.setDateChange}\n          />\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <ApprovalRequestsList\n            forms={this.state.dbRequests}\n            handleShowAll={this.handleShowAll}\n            showAll={this.state.showAll}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction timeStamp(date1, date2) {\n  var val = 0;\n\n  let date_val = new Date(date1);\n\n  val = date2.getTime() - date_val.getTime();\n\n  return Math.floor(val / (1000 * 3600 * 24));\n}\n\nfunction DateRange(props) {\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-md-6 col-lg-5 mb-1\">\n        <div>\n          <label className=\"form-label text-light h5 me-1\">From:</label>\n        </div>\n        <DateTimePicker\n          disableClock\n          maxDate={props.toDate}\n          value={props.fromDate}\n          onChange={(val) => {\n            val.setHours(0, 0, 0, 0);\n            props.setDateChange(val, props.toDate);\n            // this.setState({ showDate: val });\n          }}\n          format=\"dd/MM/yyyy\"\n        />\n      </div>\n      <div className=\"col-sm-6 col-md-6 col-lg-5 mb-1\">\n        <div>\n          <label className=\"form-label text-light h5 me-1\">To:</label>\n        </div>\n\n        <DateTimePicker\n          disableClock\n          maxDate={new Date()}\n          value={props.toDate}\n          onChange={(val) => {\n            val.setHours(23, 59, 59, 0);\n            props.setDateChange(props.fromDate, val);\n            // this.setState({ toDate: val });\n          }}\n          format=\"dd/MM/yyyy\"\n        />\n      </div>\n      <div className=\"col-md-2 col-lg-2 mt-lg-4\">\n        <button\n          className=\"btn btn-outline-light\"\n          onClick={props.handleDateChange}\n        >\n          Show\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction ApprovalRequestsList(props) {\n  if (props.forms) {\n    return props.forms.length !== 0 ? (\n      <div>\n        <div className=\"row mb-3 ms-1 me-1 mt-5\">\n          <div className=\"form-check form-switch col-6\">\n            <label\n              className=\"form-check-label text-light h5 ms-1\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Show all\n            </label>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n              onChange={props.handleShowAll}\n            ></input>\n          </div>\n          <div className=\"col-6\">\n            <ExportToExcel\n              apiData={createExcelData(props.forms)}\n              fileName=\"myfile\"\n            />\n          </div>\n        </div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.forms\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return (\n                <Link\n                  to={\"/form/\" + data._id}\n                  className=\"list-group-item list-group-item-action\"\n                  key={\"Link_\" + data._id}\n                  style={{\n                    display: props.showAll || data.show ? \"block\" : \"none\",\n                  }}\n                >\n                  <div\n                    className=\"d-flex w-100 justify-content-between\"\n                    key={\"div_\" + data._id}\n                  >\n                    <h5 className=\"mb-2\">{data.filled_by}</h5>\n                    <small>\n                      {data.date_submitted\n                        ? timeStamp(data.date_submitted, new Date()) +\n                          \" days ago\"\n                        : \"\"}\n                    </small>\n                  </div>\n                  <p className=\"mb-2\">{data.form.name}</p>\n                  {getApprovalStatuses(data.approval).map((app) => {\n                    return (\n                      <span\n                        className={\"badge rounded-pill mb-1 me-2 \" + app.status}\n                      >\n                        {app.message}\n                      </span>\n                    );\n                  })}\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No requests to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nfunction createExcelData(forms) {\n  let return_data = [];\n\n  for (let f of forms) {\n    let app = [];\n    let dis = [];\n    for (let a of f.approval) {\n      if (a.status === 1) {\n        app.push(a.approver.firstname);\n      } else if (a.status === 2) {\n        dis.push(a.approver.firstname);\n      }\n    }\n\n    let obj = {\n      \"Filled By\": f.filled_by,\n      \"Form Type\": f.form.name,\n      \"Approved By\": \"\".concat(app),\n      \"Dissaproved By\": \"\".concat(dis),\n      \"Date Filled\": Moment(f.date_submitted).format(\"DD/MM/YYYY - h:mm A\"),\n    };\n\n    return_data.push(obj);\n  }\n\n  return return_data;\n}\n\nfunction getApprovalStatuses(approval) {\n  var approvals = [];\n\n  for (let app of approval) {\n    if (app.status === 1) {\n      // console.log(app.status);\n      approvals.push({\n        status: \"bg-success\",\n        message: app.approver.firstname + \" Approved\",\n      });\n    } else if (app.status === 2) {\n      // console.log(app.firstname);\n      approvals.push({\n        status: \"bg-danger\",\n        message: app.approver.firstname + \" Disapproved\",\n      });\n    }\n  }\n\n  if (approvals.length === 0) {\n    approvals.push({\n      status: \"bg-warning\",\n      message: \"Approval Pending\",\n    });\n  }\n\n  return approvals;\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport Loading from \"./Loading\";\n\nfunction ManageUsers(props) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    UserService.getUsers().then((res) => {\n      if (res.data) {\n        setUsers(res.data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"mt-2\">\n      <div className=\"row mb-3\">\n        <div className=\"col-12 text-light\">\n          <h4>Manage Users</h4>\n        </div>\n\n        <div className=\"col\">\n          <Link to=\"/mod/signup\" className=\"btn btn-outline-light\">\n            + Add User\n          </Link>\n        </div>\n        <div className=\"col\">\n          <Link to=\"/mod/roles\" className=\"btn btn-outline-light\">\n            Manage Roles\n          </Link>\n        </div>\n      </div>\n      <UsersList users={users} />\n    </div>\n  );\n}\n\nfunction UsersList(props) {\n  if (props.users) {\n    return props.users.length !== 0 ? (\n      <div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.users\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return (\n                <Link\n                  to={{ pathname: \"/mod/userdetails\", state: { user: data } }}\n                  className=\"list-group-item list-group-item-action\"\n                  key={\"Link_\" + data._id}\n                >\n                  <div\n                    className=\"d-flex w-100 justify-content-between\"\n                    key={\"div_\" + data._id}\n                  ></div>\n                  <h5>{data.firstname + \" \" + data.lastname}</h5>\n                  <p className=\"mb-2\">Username: {data.username}</p>\n                  <p className=\"mb-2\">Role: {data.role.description}</p>\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No users to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nexport default ManageUsers;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\n\nfunction UserDetails(props) {\n  const location = useLocation();\n  const { user } = location.state;\n  const [roles, setRoles] = useState([]);\n\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [clicked_create, setClickedCreate] = useState(false);\n  const [error, setError] = useState(false);\n  const [missingField, setMissingField] = useState(false);\n\n  useEffect(() => {\n    UserService.getRoles().then((res) => {\n      if (res.data) {\n        setRoles(res.data);\n      }\n    });\n    setFirstname(user.firstname);\n    setLastname(user.lastname);\n    setUsername(user.username);\n    setEmail(user.email);\n    setRole(user.role._id);\n  }, []);\n\n  let handleUpdate = (e) => {\n    e.preventDefault();\n    setClickedCreate(true);\n    let body = {};\n    if (username === \"\") {\n      setError(false);\n      setClickedCreate(false);\n      setMissingField(true);\n    } else {\n      setMissingField(false);\n      if (password === \"\") {\n        body = {\n          id: user._id,\n          username: username,\n          firstname: firstname,\n          lastname: lastname,\n          role: role,\n          email: email,\n        };\n      } else {\n        body = {\n          id: user._id,\n          username: username,\n          firstname: firstname,\n          lastname: lastname,\n          role: role,\n          password: password,\n          email: email,\n        };\n      }\n\n      UserService.updateApprover(body).then(\n        () => {\n          window.location.replace(\"/mod/users\");\n        },\n        (error) => {\n          setClickedCreate(false);\n          setError(true);\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"container container-form d-flex align-items-center justify-content-center mt-5\">\n      <form className=\"card bg-light bg-gradient\" onSubmit={handleUpdate}>\n        <div className=\"card-header\">\n          <div className=\"card-title\">\n            <h2 className=\"text-center\">{user.firstname} - User Details</h2>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Firstname:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={firstname}\n                onChange={(e) => {\n                  setFirstname(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Lastname:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={lastname}\n                onChange={(e) => {\n                  setLastname(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          {user.role.name == \"mod\" ? (\n            \"\"\n          ) : (\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Username:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={username}\n                  onChange={(e) => {\n                    setUsername(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n          )}\n\n          {user.role.name === \"mod\" ? (\n            \"\"\n          ) : (\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Role:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  type=\"text\"\n                  className=\"form-select\"\n                  value={role}\n                  onChange={(e) => {\n                    setRole(e.target.value);\n                  }}\n                >\n                  {roles.map((role) => {\n                    return (\n                      <option value={role._id}>\n                        {role.name} - {role.description}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n            </div>\n          )}\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Email:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">New Password:</label>\n            <div\n              className=\"col-sm-8\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            >\n              <input type=\"password\" className=\"form-control\" />\n            </div>\n          </div>\n          {error ? (\n            <strong className=\"text-danger mt-2\">\n              Error submitting request. Check connection.\n            </strong>\n          ) : (\n            \"\"\n          )}\n          {missingField ? (\n            <strong className=\"text-danger\">Username is required.</strong>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"row\">\n            <div className=\"col-12 text-end\">\n              {clicked_create ? (\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span\n                    class=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  Loading...\n                </button>\n              ) : (\n                <button className=\"btn btn-outline-primary\">Update</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default UserDetails;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction FormResult(props) {\n  // const [isOpen, setIsOpen] = useState(false);\n\n  const success = true;\n\n  // useEffect(() => {\n  //   setIsOpen(props.show);\n  // }, [props.show]);\n\n  // const showModal = () => {\n  //   setIsOpen(true);\n  // };\n\n  // const hideModal = () => {\n  //   setIsOpen(false);\n  // };\n\n  return success ? (\n    <Modal show={props.show} dialogClassName=\"modal-dialog-centered\">\n      <div className=\"\">\n        <Modal.Header>\n          <Modal.Title className=\"text-danger bg-gradient\">\n            Login failed\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Please check your username/password.</Modal.Body>\n        <Modal.Footer as=\"footer\">\n          <button className=\"btn btn-outline-dark\" onClick={props.hideModal}>\n            Close\n          </button>\n        </Modal.Footer>\n      </div>\n    </Modal>\n  ) : (\n    <div className=\"container container-form alert alert-danger\" role=\"alert\">\n      <h5 className=\"alert-heading\">Submission failed</h5>\n      <hr />\n      <p className=\"mb-0\">\n        <Link className=\"btn btn-primary\" to=\"/\">\n          Click here\n        </Link>{\" \"}\n        to fill another form\n      </p>\n    </div>\n  );\n}\n\n// const SuccessMessage = () => {\n//   return (\n//     <div className=\"container container-form alert alert-success\" role=\"alert\">\n//       <h5 className=\"alert-heading\">\n//         Your approval request was successfully submitted!\n//       </h5>\n//       <hr />\n//       <p className=\"mb-0\">\n//         <Link className=\"btn btn-outline-dark\" to=\"/\">\n//           Click here\n//         </Link>{\" \"}\n//         to fill another form\n//       </p>\n//     </div>\n//   );\n// };\n\n// function FailureMessage() {}\n\nexport default FormResult;\n","import React, { Component } from \"react\";\n\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport FormResult from \"./FormResult\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      message: \"\",\n      role: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      invalidLogin: false,\n      roles: [],\n    };\n\n    this.handleSignup = this.handleSignup.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    //get roles\n    UserService.getRoles().then((res) => {\n      if (res.data) {\n        this.setState({ roles: res.data });\n      }\n    });\n  }\n\n  handleChange(e, field) {\n    let state = this.state;\n    state[field] = e.target.value;\n\n    this.setState(state);\n  }\n\n  handleSignup(e) {\n    e.preventDefault();\n\n    AuthService.register(\n      this.state.username,\n      this.state.firstname,\n      this.state.lastname,\n      this.state.role,\n      this.state.password,\n      this.state.email\n    ).then(\n      () => {\n        window.location.replace(\"users\");\n      },\n      (error) => {\n        this.setState({ invalidLogin: true });\n      }\n    );\n  }\n\n  hideModal() {\n    this.setState({ invalidLogin: false });\n  }\n\n  render() {\n    const { roles } = this.state;\n    return (\n      <div className=\"container-form mt-5\">\n        <form\n          className=\"card bg-light bg-gradient\"\n          onSubmit={this.handleSignup}\n        >\n          <div className=\"card-header\">\n            <div className=\"card-title\">\n              <h2 className=\"text-center\">Create new user</h2>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Username:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"username\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Password:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"password\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Firstname:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"firstname\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Lastname:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"lastname\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Roles:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  className=\"form-select\"\n                  onChange={(e) => this.handleChange(e, \"role\")}\n                >\n                  <option selected value=\"\">\n                    -- role --\n                  </option>\n                  {roles.map((role) => {\n                    return (\n                      <option value={role._id}>\n                        {role.name} - {role.description}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Email:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"email\")}\n                />\n              </div>\n            </div>\n          </div>\n          {/* {this.state.invalidLogin ? \"Invalid Login\" : \"\"} */}\n          <div className=\"card-footer text-end\">\n            <button className=\"btn btn-outline-primary\">Create</button>\n          </div>\n        </form>\n        <FormResult show={this.state.invalidLogin} hideModal={this.hideModal} />\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport UserService from \"../../services/user.service\";\nimport Loading from \"../Loading\";\n\nfunction ManageRoles(props) {\n  const [roles, setRoles] = useState([]);\n\n  useEffect(() => {\n    UserService.getRoles().then((res) => {\n      if (res.data) {\n        setRoles(res.data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"mt-2\">\n      <div className=\"row mb-3\">\n        <div className=\"col-12 text-light\">\n          <h4>Roles</h4>\n        </div>\n        <div className=\"col-4\">\n          <Link to=\"/mod/roles/create\" className=\"btn btn-outline-light\">\n            + Add role\n          </Link>\n        </div>\n        <div className=\"col-6\">\n          <Link\n            to=\"/mod/roles/createdepartment\"\n            className=\"btn btn-outline-light\"\n          >\n            Manage Departments\n          </Link>\n        </div>\n      </div>\n      <RolesList roles={roles} />\n    </div>\n  );\n}\n\nfunction RolesList(props) {\n  if (props.roles) {\n    return props.roles.length !== 0 ? (\n      <div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.roles\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              if (data.name !== \"mod\") {\n                return (\n                  <Link\n                    to={{\n                      pathname: \"/mod/role/details\",\n                      state: { role: data },\n                    }}\n                    className=\"list-group-item list-group-item-action\"\n                    key={\"Link_\" + data._id}\n                  >\n                    <div\n                      className=\"d-flex w-100 justify-content-between\"\n                      key={\"div_\" + data._id}\n                    ></div>\n                    <h5>{data.description}</h5>\n                    <p className=\"mb-2\">Type: {data.name}</p>\n                    <p className=\"mb-2\">Access Level: {data.level}</p>\n                  </Link>\n                );\n              }\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No roles to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nexport default ManageRoles;\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nclass RoleCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: \"\",\n      description: \"\",\n      department: \"\",\n      level: \"\",\n      clicked_create: false,\n      error: false,\n      field_missing: false,\n      departments: [],\n    };\n\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getDepartments().then((res) => {\n      if (res.data) {\n        this.setState({ departments: res.data });\n      }\n    });\n  }\n\n  handleChange(e, field) {\n    let state = this.state;\n    state[field] = e.target.value;\n\n    this.setState(state);\n  }\n\n  handleCreate(e) {\n    e.preventDefault();\n    this.setState({ clicked_create: true });\n\n    const type = this.state.type;\n    const desc = this.state.description;\n    const dep = this.state.department;\n    const lvl = this.state.level;\n\n    if (type === \"\" && lvl === \"\") {\n      this.setState({ field_missing: true });\n      this.setState({ clicked_create: false });\n    } else {\n      this.setState({ field_missing: false });\n      UserService.createRole({\n        name: type,\n        description: desc,\n        department: dep,\n        level: lvl,\n      }).then(\n        () => {\n          this.setState({ clicked_create: false });\n          window.location.replace(\"/mod/roles\");\n        },\n        (error) => {\n          this.setState({ clicked_create: false });\n          this.setState({ error: true });\n        }\n      );\n    }\n  }\n\n  render() {\n    const { departments } = this.state;\n    return (\n      <div className=\"container-form mt-5\">\n        <form\n          className=\"card bg-light bg-gradient\"\n          onSubmit={this.handleCreate}\n        >\n          <div className=\"card-header\">\n            <div className=\"card-title\">\n              <h2 className=\"text-center\">Create new role</h2>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Type:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  placeholder=\"e.g. HOD\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"type\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Description:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  placeholder=\"e.g. Head of IT\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"description\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Department:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  className=\"form-select\"\n                  onChange={(e) => this.handleChange(e, \"department\")}\n                >\n                  <option selected value=\"\">\n                    -- department --\n                  </option>\n                  {departments.map((dep) => {\n                    return <option value={dep._id}>{dep.name}</option>;\n                  })}\n                </select>\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Access level:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  className=\"form-select\"\n                  onChange={(e) => this.handleChange(e, \"level\")}\n                >\n                  <option selected value=\"\">\n                    -- access level --\n                  </option>\n                  <option value=\"0\">level 0 -- only view</option>\n                  <option value=\"1\">\n                    level 1 -- view/approve department only\n                  </option>\n                  <option value=\"2\">level 2 -- view/approve all</option>\n                  <option value=\"3\">level 3 -- view/approve all</option>\n                </select>\n              </div>\n            </div>\n            {this.state.error ? (\n              <strong className=\"text-danger mt-2\">\n                Error submitting request. Check connection.\n              </strong>\n            ) : (\n              \"\"\n            )}\n            {this.state.field_missing ? (\n              <strong className=\"text-danger\">\n                Type and Access level fields are required.\n              </strong>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"card-footer text-end\">\n            {this.state.clicked_create ? (\n              <button className=\"btn btn-primary\" type=\"button\" disabled>\n                <span\n                  class=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </button>\n            ) : (\n              <button className=\"btn btn-outline-primary\">Create</button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RoleCreate;\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nclass DepartmentCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      clicked_create: false,\n      error: false,\n      field_missing: false,\n      departments: {},\n      new_departments: {},\n      counter: 0,\n    };\n\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleNewChange = this.handleNewChange.bind(this);\n    this.handleUpdatedChange = this.handleUpdatedChange.bind(this);\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getDepartments().then((resp) => {\n      if (resp.data) {\n        let deps = {};\n        resp.data.map((d) => {\n          deps[d._id] = d;\n        });\n        this.setState({ departments: deps });\n      }\n    });\n  }\n\n  handleNewChange(e, field) {\n    let deps = this.state.new_departments;\n    deps[field].name = e.target.value;\n\n    this.setState({ new_departments: deps });\n  }\n\n  handleUpdatedChange(e, field) {\n    let deps = this.state.departments;\n    deps[field].name = e.target.value;\n\n    this.setState({ departments: deps });\n  }\n\n  handleCreate(e) {\n    e.preventDefault();\n    this.setState({ clicked_create: true });\n\n    const nm = this.state.name;\n\n    let new_dep_data = [];\n    let missing_err = false;\n    const new_departs = this.state.new_departments;\n    Object.keys(new_departs).map((d) => {\n      if (new_departs[d].name === \"\") {\n        missing_err = true;\n      } else {\n        new_dep_data.push({ name: new_departs[d].name });\n      }\n    });\n\n    let update_dep_data = [];\n    const update_departs = this.state.departments;\n    Object.keys(update_departs).map((d) => {\n      if (update_departs[d].name === \"\") {\n        missing_err = true;\n      } else {\n        update_dep_data.push({ id: d, name: update_departs[d].name });\n      }\n    });\n\n    if (missing_err) {\n      this.setState({ field_missing: true });\n      this.setState({ clicked_create: false });\n    } else {\n      this.setState({ field_missing: false });\n      console.log(update_dep_data);\n      console.log(new_dep_data);\n      UserService.createDepartment({\n        data: new_dep_data,\n      }).then(\n        () => {\n          if (update_dep_data.length === 0) {\n            this.setState({ clicked_create: false });\n            window.location.replace(\"/mod/roles\");\n          } else {\n            UserService.updateDepartment({\n              data: update_dep_data,\n            }).then(\n              () => {\n                this.setState({ clicked_create: false });\n                window.location.replace(\"/mod/roles\");\n              },\n              (error) => {\n                this.setState({ clicked_create: false });\n                this.setState({ error: true });\n              }\n            );\n          }\n        },\n        (error) => {\n          this.setState({ clicked_create: false });\n          this.setState({ error: true });\n        }\n      );\n    }\n  }\n\n  handleDelete(e, id) {\n    e.preventDefault();\n    let new_deps = this.state.new_departments;\n\n    delete new_deps[id];\n\n    this.setState({ new_departments: new_deps });\n  }\n\n  handleAdd(e) {\n    e.preventDefault();\n\n    let new_deps = this.state.new_departments;\n    const count = this.state.counter;\n\n    new_deps[count] = {\n      name: \"\",\n    };\n\n    console.log(new_deps);\n\n    this.setState({ new_departments: new_deps });\n    this.setState({ counter: count + 1 });\n  }\n\n  render() {\n    return (\n      <div className=\"container-form mt-5\">\n        <form\n          className=\"card bg-light bg-gradient\"\n          onSubmit={this.handleCreate}\n        >\n          <div className=\"card-header\">\n            <div className=\"card-title\">\n              <h2 className=\"text-center\">Manage Departments</h2>\n            </div>\n          </div>\n          <div className=\"card-body text-center align-items-center mb-2\">\n            {Object.keys(this.state.departments).map((dep) => {\n              return (\n                <div\n                  key={\"div_\" + dep}\n                  className=\"row m-1 form-text text-center align-items-center\"\n                >\n                  <div\n                    key={\"div2_\" + dep}\n                    className=\"form-floating col-5 mb-1 ps-1\"\n                  >\n                    <input\n                      key={\"input_\" + dep}\n                      className=\"form-control\"\n                      type=\"text\"\n                      value={this.state.departments[dep].name}\n                      onChange={(e) => this.handleUpdatedChange(e, dep)}\n                      placeholder=\"Field Name\"\n                      id={\"inputFieldName\" + dep}\n                    />\n                    <label\n                      key={\"label_\" + dep}\n                      htmlFor={\"inputFieldName\" + dep}\n                    >\n                      Name\n                    </label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {Object.keys(this.state.new_departments).map((dep) => {\n              return (\n                <div\n                  key={\"div_\" + dep}\n                  className=\"row m-1 form-text text-center align-items-center\"\n                >\n                  <div\n                    key={\"div2_\" + dep}\n                    className=\"form-floating col-5 mb-1 ps-1\"\n                  >\n                    <input\n                      key={\"input_\" + dep}\n                      className=\"form-control\"\n                      type=\"text\"\n                      value={this.state.new_departments[dep].name}\n                      onChange={(e) => this.handleNewChange(e, dep)}\n                      placeholder=\"Field Name\"\n                      id={\"inputFieldName\" + dep}\n                    />\n                    <label\n                      key={\"label_\" + dep}\n                      htmlFor={\"inputFieldName\" + dep}\n                    >\n                      Name\n                    </label>\n                  </div>\n                  <div key={\"div3_\" + dep} className=\"col-2\">\n                    <button\n                      key={\"button_\" + dep}\n                      className=\"btn btn-outline-danger btn-sm\"\n                      onClick={(e) => this.handleDelete(e, dep)}\n                    >\n                      x\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"mb-3 row text-center\">\n              <div className=\"col-12\">\n                <button\n                  className=\"btn btn-outline-success btn-sm\"\n                  onClick={this.handleAdd}\n                >\n                  + Add Department\n                </button>\n              </div>\n            </div>\n            {this.state.error ? (\n              <strong className=\"text-danger mt-2\">\n                Error submitting request. Check connection.\n              </strong>\n            ) : (\n              \"\"\n            )}\n            {this.state.field_missing ? (\n              <strong className=\"text-danger\">Name field is required.</strong>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"card-footer text-end\">\n            {this.state.clicked_create ? (\n              <button className=\"btn btn-primary\" type=\"button\" disabled>\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </button>\n            ) : (\n              <button className=\"btn btn-outline-primary\">Update</button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default DepartmentCreate;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport UserService from \"../../services/user.service\";\n\nfunction RoleDetails(props) {\n  const location = useLocation();\n  const { role } = location.state;\n  const [departments, setDepartments] = useState([]);\n\n  const [description, setDescription] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n\n  const [clicked_create, setClickedCreate] = useState(false);\n  const [error, setError] = useState(false);\n  const [missingField, setMissingField] = useState(false);\n\n  useEffect(() => {\n    UserService.getDepartments().then((res) => {\n      if (res.data) {\n        setDepartments(res.data);\n      }\n    });\n    setDescription(role.description);\n    setName(role.name);\n    setDepartment(role.department);\n    setLevel(role.level);\n  }, []);\n\n  let handleUpdate = (e) => {\n    e.preventDefault();\n    setClickedCreate(true);\n\n    if (level === \"\" && name == \"\") {\n      setError(false);\n      setClickedCreate(false);\n      setMissingField(true);\n    } else {\n      setMissingField(false);\n\n      const body = {\n        id: role._id,\n        description: description,\n        level: level,\n        name: name,\n        department: department,\n      };\n\n      UserService.updateRole(body).then(\n        () => {\n          window.location.replace(\"/mod/roles\");\n        },\n        (error) => {\n          setClickedCreate(false);\n          setError(true);\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"container container-form d-flex align-items-center justify-content-center mt-5\">\n      <form className=\"card bg-light bg-gradient\" onSubmit={handleUpdate}>\n        <div className=\"card-header\">\n          <div className=\"card-title\">\n            <h2 className=\"text-center\">{role.description} - Role Details</h2>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Type:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Description:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Department:</label>\n            <div className=\"col-sm-8\">\n              <select\n                type=\"text\"\n                className=\"form-select\"\n                value={department}\n                onChange={(e) => {\n                  setDepartment(e.target.value);\n                }}\n              >\n                <option value=\"\">none</option>\n                {departments.map((dep) => {\n                  return <option value={dep._id}>{dep.name}</option>;\n                })}\n              </select>\n            </div>\n          </div>\n          {role.name === \"mod\" ? (\n            \"\"\n          ) : (\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Access Level:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  type=\"text\"\n                  className=\"form-select\"\n                  value={level}\n                  onChange={(e) => {\n                    setLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"0\">level 0 -- only view</option>\n                  <option value=\"1\">level 1 -- only department requests</option>\n                  <option value=\"2\">\n                    level 2 -- view/approve all requests\n                  </option>\n                  <option value=\"3\">\n                    level 3 -- view/approve all requests\n                  </option>\n                </select>\n              </div>\n            </div>\n          )}\n\n          {error ? (\n            <strong className=\"text-danger mt-2\">\n              Error submitting request. Check connection.\n            </strong>\n          ) : (\n            \"\"\n          )}\n          {missingField ? (\n            <strong className=\"text-danger\">\n              Name and Access level is required.\n            </strong>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"row\">\n            <div className=\"col-12 text-end\">\n              {clicked_create ? (\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span\n                    class=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  Loading...\n                </button>\n              ) : (\n                <button className=\"btn btn-outline-primary\">Update</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default RoleDetails;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport UserService from \"../../services/user.service\";\nimport Loading from \"../Loading\";\nimport Moment from \"moment\";\n\nfunction ManageForms(props) {\n  const [forms, setForms] = useState([]);\n\n  useEffect(() => {\n    UserService.getForms().then((res) => {\n      if (res.data) {\n        setForms(res.data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"mt-2\">\n      <div className=\"row mb-3\">\n        <div className=\"col-12 text-light\">\n          <h4>Manage Forms</h4>\n        </div>\n        <div className=\"col-4\">\n          <Link to=\"/mod/forms/create\" className=\"btn btn-outline-light\">\n            + Add form\n          </Link>\n        </div>\n      </div>\n      <FormsList forms={forms} />\n    </div>\n  );\n}\n\nfunction FormsList(props) {\n  if (props.forms) {\n    return props.forms.length !== 0 ? (\n      <div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.forms\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return (\n                <Link\n                  to={{\n                    pathname: \"/mod/form/details\",\n                    state: { form: data },\n                  }}\n                  className=\"list-group-item list-group-item-action\"\n                  key={\"Link_\" + data._id}\n                >\n                  <div\n                    className=\"d-flex w-100 justify-content-between\"\n                    key={\"div_\" + data._id}\n                  ></div>\n                  <h5>Form Title: {data.name}</h5>\n                  <p className=\"mb-2\">\n                    Date Created:{\" \"}\n                    {Moment(data.date_created).format(\"DD/MM/YYYY - h:mm A\")}\n                  </p>\n                  <p className=\"mb-2\">\n                    Final Approvers:{\" \"}\n                    {data.finals.map((app) => {\n                      return app.firstname + \". \";\n                    })}\n                  </p>\n                  {data.finals.map((app) => {})}\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No forms to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nexport default ManageForms;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport UserService from \"../../services/user.service\";\n\nfunction FormDetails(props) {\n  const location = useLocation();\n  const { form } = location.state;\n\n  const [fieldTypes, setFieldTypes] = useState([]);\n\n  const [name, setName] = useState(\"\");\n  const [fields, setFields] = useState({});\n\n  const [clicked_create, setClickedCreate] = useState(false);\n  const [error, setError] = useState(false);\n  const [missingField, setMissingField] = useState(false);\n\n  const [level_one, setLevelOne] = useState(1);\n  const [level_two, setLevelTwo] = useState(2);\n  const [level_three, setLevelThree] = useState(3);\n\n  const [final_approvers, setFinalApprovers] = useState({});\n  const [list_of_approvers, setListOfApprovers] = useState([]);\n\n  useEffect(() => {\n    UserService.getFieldTypes().then((res) => {\n      if (res.data) {\n        setFieldTypes(res.data);\n      }\n    });\n    let new_fields = {};\n    for (let field of form.fields) {\n      new_fields[field._id] = field;\n    }\n    form.stages[1].map((s) => {\n      if (s === 1) {\n        setLevelOne(1);\n      }\n      if (s === 2) {\n        setLevelTwo(1);\n      }\n      if (s == 3) {\n        setLevelThree(1);\n      }\n    });\n    form.stages[2].map((s) => {\n      if (s === 1) {\n        setLevelOne(2);\n      }\n      if (s === 2) {\n        setLevelTwo(2);\n      }\n      if (s == 3) {\n        setLevelThree(2);\n      }\n    });\n    form.stages[3].map((s) => {\n      if (s === 1) {\n        setLevelOne(3);\n      }\n      if (s === 2) {\n        setLevelTwo(3);\n      }\n      if (s == 3) {\n        setLevelThree(3);\n      }\n    });\n\n    UserService.getApprovers().then((resp) => {\n      if (resp.data) {\n        let approvers = {};\n\n        resp.data.map((approver) => {\n          approvers[approver._id] = false;\n        });\n\n        form.finals.map((f) => {\n          approvers[f._id] = true;\n        });\n\n        setFinalApprovers(approvers);\n        setListOfApprovers(resp.data);\n      }\n    });\n\n    setFields(new_fields);\n    setName(form.name);\n  }, []);\n\n  let handleFieldTypeChange = (e, field_id) => {\n    let current_fields = fields;\n    current_fields[field_id].type = e.target.value;\n    setFields({ ...fields });\n  };\n\n  let handleFieldNameChange = (e, field_id) => {\n    let current_fields = fields;\n    current_fields[field_id].name = e.target.value;\n    setFields({ ...fields });\n  };\n\n  let handleDelete = (e, field_id) => {\n    e.preventDefault();\n    let current_fields = fields;\n\n    delete current_fields[field_id];\n\n    setFields({ ...fields });\n  };\n\n  let handleAdd = (e) => {\n    e.preventDefault();\n    let current_fields = fields;\n\n    const new_field = {\n      name: \"\",\n      required: false,\n      type: \"\",\n    };\n\n    setFields({ ...fields, new_field });\n  };\n\n  let handleRequiredChange = (e, field_id) => {\n    let current_fields = fields;\n    const value = !current_fields[field_id].required;\n    current_fields[field_id].required = value;\n    setFields({ ...fields });\n  };\n\n  let handleUpdate = (e) => {\n    e.preventDefault();\n    setClickedCreate(true);\n\n    let fields_array = [];\n    let fields_error = false;\n\n    Object.keys(fields).map((f) => {\n      if (fields[f].name === \"\" || fields[f].type === \"\") {\n        console.log(\"found error!\");\n        fields_error = true;\n      }\n      fields_array.push(fields[f]);\n    });\n\n    if (name === \"\" || fields_error) {\n      setError(false);\n      setClickedCreate(false);\n      setMissingField(true);\n    } else {\n      setMissingField(false);\n\n      let stages = { 1: [], 2: [], 3: [] };\n\n      stages[level_one].push(1);\n      stages[level_two].push(2);\n      stages[level_three].push(3);\n\n      const body = {\n        id: form._id,\n        name: name,\n        fields: fields_array,\n        stages: stages,\n      };\n\n      UserService.updateForm(body).then(\n        () => {\n          window.location.replace(\"/mod/forms\");\n        },\n        (error) => {\n          setClickedCreate(false);\n          setError(true);\n        }\n      );\n    }\n  };\n\n  let handleAddFinalApprover = (e, id) => {\n    let current_approvers = final_approvers;\n    console.log(current_approvers);\n    const value = !current_approvers[id];\n    current_approvers[id] = value;\n    console.log(current_approvers);\n    setFinalApprovers(current_approvers);\n  };\n\n  return (\n    <div className=\"container container-form d-flex align-items-center justify-content-center mt-5\">\n      <form\n        className=\"container-form card bg-light bg-gradient\"\n        onSubmit={handleUpdate}\n        autoComplete=\"off\"\n      >\n        <div className=\"card-header\">\n          <div className=\"card-title\">\n            <h2 className=\"text-center\">{form.name} - Form Details</h2>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3 row\">\n            <div className=\"col-4 m-auto\">\n              <strong>Name:</strong>\n            </div>\n\n            <div className=\"col-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <FormFieldsEdit\n            fields={fields}\n            fieldTypes={fieldTypes}\n            handleFieldTypeChange={handleFieldTypeChange}\n            handleFieldNameChange={handleFieldNameChange}\n            handleRequiredChange={handleRequiredChange}\n            handleDelete={handleDelete}\n          />\n          <div className=\"mb-3 row text-center\">\n            <div className=\"col-12\">\n              <button\n                className=\"btn btn-outline-success btn-sm\"\n                onClick={handleAdd}\n              >\n                + Add Field\n              </button>\n            </div>\n          </div>\n\n          <div className=\"mb-3 row\">\n            <strong className=\"col-5 \">Select stages of approval:</strong>\n            <div className=\"mb-3 row text-center m-1\">\n              <div className=\"col-6 text-start mb-2\">\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                  Level 1 - view/approve department only\n                </label>\n                <select\n                  value={level_one}\n                  className=\"form-select\"\n                  onChange={(e) => {\n                    setLevelOne(e.target.value);\n                  }}\n                >\n                  <option selected value=\"1\">\n                    First Stage\n                  </option>\n                  <option value=\"2\">Second Stage</option>\n                  <option value=\"3\">Third Stage</option>\n                </select>\n              </div>\n              <div className=\"col-6 text-start mb-2\">\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                  Level 2 - view/approve all\n                </label>\n                <select\n                  value={level_two}\n                  className=\"form-select\"\n                  onChange={(e) => {\n                    setLevelTwo(e.target.value);\n                  }}\n                >\n                  <option value=\"1\">First Stage</option>\n                  <option value=\"2\">Second Stage</option>\n                  <option value=\"3\">Third Stage</option>\n                </select>\n              </div>\n              <div className=\"col-6 text-start\">\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                  Level 3 - view/approve all\n                </label>\n                <select\n                  value={level_three}\n                  className=\"form-select\"\n                  onChange={(e) => {\n                    setLevelThree(e.target.value);\n                  }}\n                >\n                  <option value=\"1\">First Stage</option>\n                  <option value=\"2\">Second Stage</option>\n                  <option value=\"3\">Third Stage</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          {error ? (\n            <strong className=\"text-danger mt-2\">\n              Error submitting request. Check connection.\n            </strong>\n          ) : (\n            \"\"\n          )}\n          {missingField ? (\n            <strong className=\"text-danger\">\n              Form name, field names and types are required fields.\n            </strong>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"row\">\n            <div className=\"col-12 text-end\">\n              {clicked_create ? (\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span\n                    className=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  Loading...\n                </button>\n              ) : (\n                <button className=\"btn btn-outline-primary\">Update</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction FormFieldsEdit(props) {\n  const [fields, setFields] = useState({});\n  // const [fieldChecked, setFieldChecked] = useState({});\n\n  useEffect(() => {\n    setFields(props.fields);\n  }, [props.fields]);\n\n  return (\n    <div className=\"mb-3 row\">\n      <div className=\"col-12 m-auto\">\n        <strong>Fields:</strong>\n      </div>\n\n      {Object.keys(fields).map((id) => {\n        return (\n          <div className=\"row m-1 form-text\">\n            <div className=\"form-floating col-5 mb-1 ps-1\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={fields[id].name}\n                onChange={(e) => props.handleFieldNameChange(e, id)}\n                placeholder=\"Field Name\"\n                id=\"inputFieldName\"\n              />\n              <label htmlFor=\"inputFieldName\">Field Name</label>\n            </div>\n            <div className=\"form-floating col-3 mb-1 ps-1\">\n              <select\n                className=\"form-select\"\n                type=\"text\"\n                value={fields[id].type}\n                onChange={(e) => props.handleFieldTypeChange(e, id)}\n                id=\"selectFieldTypes\"\n              >\n                <option value=\"\"></option>\n                {props.fieldTypes.map((field_type) => {\n                  return (\n                    <option key={field_type._id} value={field_type._id}>\n                      {\" \"}\n                      {field_type.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <label htmlFor=\"selectFieldTypes\">Field Type</label>\n            </div>\n            <div className=\"form-check form-switch col-2 m-auto\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n                name={id}\n                checked={fields[id].required}\n                onChange={(e) => {\n                  props.handleRequiredChange(e, id);\n                }}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Required\n              </label>\n            </div>\n            <div className=\"col-2 m-auto text-end\">\n              <button\n                className=\"btn btn-outline-danger btn-sm\"\n                onClick={(e) => props.handleDelete(e, id)}\n              >\n                x\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FormDetails;\n","import React, { Component, useEffect, useState } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nclass FormCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      clicked_create: false,\n      error: false,\n      field_missing: false,\n      fields: {},\n      fieldTypes: [],\n      final_approvers: {},\n      list_of_approvers: [],\n      counter: 0,\n      level_one: 1,\n      level_two: 2,\n      level_three: 3,\n    };\n\n    this.handleCreate = this.handleCreate.bind(this);\n\n    this.handleFieldTypeChange = this.handleFieldTypeChange.bind(this);\n    this.handleFieldNameChange = this.handleFieldNameChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleAddFinalApprover = this.handleAddFinalApprover.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getFieldTypes().then((res) => {\n      if (res.data) {\n        console.log(res.data);\n        this.setState({ fieldTypes: res.data });\n      }\n    });\n\n    UserService.getApprovers().then((resp) => {\n      if (resp.data) {\n        let approvers = {};\n\n        resp.data.map((approver) => {\n          approvers[approver._id] = false;\n        });\n\n        this.setState({ final_approvers: approvers });\n        this.setState({ list_of_approvers: resp.data });\n      }\n    });\n  }\n\n  handleFieldTypeChange = (e, field_id) => {\n    let current_fields = this.state.fields;\n    current_fields[field_id].type = e.target.value;\n    this.setState({ fields: current_fields });\n    // setFields({ ...fields });\n  };\n\n  handleFieldNameChange = (e, field_id) => {\n    let current_fields = this.state.fields;\n    current_fields[field_id].name = e.target.value;\n    this.setState({ fields: current_fields });\n    // setFields({ ...fields });\n  };\n\n  handleDelete = (e, field_id) => {\n    e.preventDefault();\n    let current_fields = this.state.fields;\n    const count = this.state.counter;\n\n    delete current_fields[field_id];\n\n    this.setState({ fields: current_fields });\n    this.setState({ counter: count - 1 });\n    // setFields({ ...fields });\n  };\n\n  handleAdd = (e) => {\n    e.preventDefault();\n    let current_fields = this.state.fields;\n    const count = this.state.counter;\n\n    current_fields[count] = {\n      name: \"\",\n      required: false,\n      type: \"\",\n    };\n\n    console.log(current_fields);\n\n    this.setState({ fields: current_fields });\n    this.setState({ counter: count + 1 });\n    // setFields({ ...fields, new_field });\n  };\n\n  handleRequiredChange = (e, field_id) => {\n    let current_fields = this.state.fields;\n    const value = !current_fields[field_id].required;\n    current_fields[field_id].required = value;\n    this.setState({ fields: current_fields });\n    // setFields({ ...fields });\n  };\n\n  handleAddFinalApprover = (e, id) => {\n    let current_approvers = this.state.final_approvers;\n    const value = !current_approvers[id];\n    current_approvers[id] = value;\n\n    this.setState({ final_approvers: current_approvers });\n  };\n\n  handleCreate(e) {\n    e.preventDefault();\n    this.setState({ clicked_create: true });\n\n    const nm = this.state.name;\n    const fields = this.state.fields;\n\n    let fields_array = [];\n    let fields_error = false;\n\n    Object.keys(fields).map((f) => {\n      if (fields[f].name === \"\" || fields[f].type === \"\") {\n        console.log(\"found error!\");\n        fields_error = true;\n      }\n      fields_array.push(fields[f]);\n    });\n\n    if (nm === \"\" || fields_error) {\n      this.setState({ field_missing: true });\n      this.setState({ clicked_create: false });\n    } else {\n      this.setState({ field_missing: false });\n\n      const final_approvers = this.state.final_approvers;\n      let approvers_array = [];\n      Object.keys(final_approvers).map((app) => {\n        if (final_approvers[app]) {\n          approvers_array.push(app);\n        }\n      });\n\n      let stages = { 1: [], 2: [], 3: [] };\n\n      stages[this.state.level_one].push(1);\n      stages[this.state.level_two].push(2);\n      stages[this.state.level_three].push(3);\n\n      UserService.createForm({\n        name: nm,\n        fields: fields_array,\n        finals: approvers_array,\n        stages: stages,\n      }).then(\n        () => {\n          this.setState({ clicked_create: false });\n          window.location.replace(\"/mod/forms\");\n        },\n        (error) => {\n          this.setState({ clicked_create: false });\n          this.setState({ error: true });\n        }\n      );\n\n      //   UserService.createDepartment({\n      //     name: nm,\n      //   }).then(\n      //     () => {\n      //       this.setState({ clicked_create: false });\n      //       window.location.replace(\"/mod/roles\");\n      //     },\n      //     (error) => {\n      //       this.setState({ clicked_create: false });\n      //       this.setState({ error: true });\n      //     }\n      //   );\n      // }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-form mt-5\">\n        <form\n          className=\"card bg-light bg-gradient\"\n          onSubmit={this.handleCreate}\n        >\n          <div className=\"card-header\">\n            <div className=\"card-title\">\n              <h2 className=\"text-center\">Create Form</h2>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"mb-3 row\">\n              <div className=\"col-3 m-auto\">\n                <strong>Form Title:</strong>\n              </div>\n\n              <div className=\"col-9 m-auto\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => {\n                    this.setState({ name: e.target.value });\n                  }}\n                />\n              </div>\n            </div>\n\n            <FormFieldsEdit\n              fields={this.state.fields}\n              fieldTypes={this.state.fieldTypes}\n              handleFieldTypeChange={this.handleFieldTypeChange}\n              handleFieldNameChange={this.handleFieldNameChange}\n              handleRequiredChange={this.handleRequiredChange}\n              handleDelete={this.handleDelete}\n            />\n            <div className=\"mb-3 row text-center\">\n              <div className=\"col-12\">\n                <button\n                  className=\"btn btn-outline-success btn-sm\"\n                  onClick={this.handleAdd}\n                >\n                  + Add Field\n                </button>\n              </div>\n            </div>\n\n            <div className=\"mb-3 row\">\n              <strong className=\"col-5 \">Select stages of approval:</strong>\n              <div className=\"mb-3 row text-center m-1\">\n                <div className=\"col-6 text-start mb-2\">\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexCheckDefault\"\n                  >\n                    Level 1 - view/approve only department\n                  </label>\n                  <select\n                    value={this.state.level_one}\n                    className=\"form-select\"\n                    onChange={(e) => {\n                      this.setState({ level_one: e.target.value });\n                    }}\n                  >\n                    <option selected value=\"1\">\n                      First Stage\n                    </option>\n                    <option value=\"2\">Second Stage</option>\n                    <option value=\"3\">Third Stage</option>\n                  </select>\n                </div>\n                <div className=\"col-6 text-start mb-2\">\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexCheckDefault\"\n                  >\n                    Level 2 - view/approve all\n                  </label>\n                  <select\n                    value={this.state.level_two}\n                    className=\"form-select\"\n                    onChange={(e) => {\n                      this.setState({ level_two: e.target.value });\n                    }}\n                  >\n                    <option value=\"1\">First Stage</option>\n                    <option value=\"2\">Second Stage</option>\n                    <option value=\"3\">Third Stage</option>\n                  </select>\n                </div>\n                <div className=\"col-6 text-start\">\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexCheckDefault\"\n                  >\n                    Level 3 - view/approve all\n                  </label>\n                  <select\n                    value={this.state.level_three}\n                    className=\"form-select\"\n                    onChange={(e) => {\n                      this.setState({ level_three: e.target.value });\n                    }}\n                  >\n                    <option value=\"1\">First Stage</option>\n                    <option value=\"2\">Second Stage</option>\n                    <option value=\"3\">Third Stage</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mb-3 row m-auto\">\n              <strong className=\"col-12 \">Select final approvers:</strong>\n\n              {this.state.list_of_approvers.map((app) => {\n                return (\n                  <div className=\"form-check m-1\" key={app._id}>\n                    <input\n                      key={\"input_\" + app._id}\n                      className=\"form-check-input\"\n                      type=\"checkbox\"\n                      checked={this.state.final_approvers[app._id]}\n                      id={\"flexCheckDefault\" + app._id}\n                      onChange={(e) => this.handleAddFinalApprover(e, app._id)}\n                    />\n                    <label\n                      key={\"label_\" + app._id}\n                      className=\"form-check-label\"\n                      htmlFor={\"flexCheckDefault\" + app._id}\n                    >\n                      {app.firstname +\n                        \" \" +\n                        app.lastname +\n                        \" - \" +\n                        app.role.description}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n\n            {this.state.error ? (\n              <strong className=\"text-danger mt-2\">\n                Error submitting request. Check connection.\n              </strong>\n            ) : (\n              \"\"\n            )}\n            {this.state.field_missing ? (\n              <strong className=\"text-danger\">\n                Form Title field is required.\n              </strong>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"card-footer text-end\">\n            {this.state.clicked_create ? (\n              <button className=\"btn btn-primary\" type=\"button\" disabled>\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </button>\n            ) : (\n              <button className=\"btn btn-outline-primary\">Create</button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction FormFieldsEdit(props) {\n  const [fields, setFields] = useState({});\n  // const [fieldChecked, setFieldChecked] = useState({});\n\n  useEffect(() => {\n    setFields(props.fields);\n  }, [props.fields]);\n\n  return (\n    <div className=\"mb-3 row\">\n      <div className=\"col-12 m-auto mb-2\">\n        <strong>Fields:</strong>\n      </div>\n\n      <div className=\"row m-1 form-text\">\n        <div className=\"form-floating col-5 mb-1 ps-1\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value=\"Employee Name\"\n            placeholder=\"Field Name\"\n            id=\"inputFieldName\"\n            disabled\n          />\n          <label htmlFor=\"inputFieldName\">Field Name</label>\n        </div>\n        <div className=\"form-floating col-3 mb-1 ps-1\">\n          <select\n            className=\"form-select\"\n            type=\"text\"\n            id=\"selectFieldTypes\"\n            disabled\n          >\n            <option selected>Text</option>\n          </select>\n          <label htmlFor=\"selectFieldTypes\">Field Type</label>\n        </div>\n        <div className=\"form-check form-switch col-2 m-auto\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"flexSwitchCheckDefault\"\n            checked={true}\n            disabled\n          />\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n            Required\n          </label>\n        </div>\n      </div>\n      <div className=\"row m-1 form-text\">\n        <div className=\"form-floating col-5 mb-1 ps-1\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value=\"Department\"\n            placeholder=\"Field Name\"\n            id=\"inputFieldName\"\n            disabled\n          />\n          <label htmlFor=\"inputFieldName\">Field Name</label>\n        </div>\n        <div className=\"form-floating col-3 mb-1 ps-1\">\n          <select\n            className=\"form-select\"\n            type=\"text\"\n            id=\"selectFieldTypes\"\n            disabled\n          >\n            <option selected>Dropdown</option>\n          </select>\n          <label htmlFor=\"selectFieldTypes\">Field Type</label>\n        </div>\n        <div className=\"form-check form-switch col-2 m-auto\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"flexSwitchCheckDefault\"\n            checked={true}\n            disabled\n          />\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n            Required\n          </label>\n        </div>\n      </div>\n      {Object.keys(fields).map((id) => {\n        return (\n          <div className=\"row m-1 form-text\">\n            <div className=\"form-floating col-5 mb-1 ps-1\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={fields[id].name}\n                onChange={(e) => props.handleFieldNameChange(e, id)}\n                placeholder=\"Field Name\"\n                id=\"inputFieldName\"\n              />\n              <label htmlFor=\"inputFieldName\">Field Name</label>\n            </div>\n            <div className=\"form-floating col-3 mb-1 ps-1\">\n              <select\n                className=\"form-select\"\n                type=\"text\"\n                value={fields[id].type}\n                onChange={(e) => props.handleFieldTypeChange(e, id)}\n                id=\"selectFieldTypes\"\n              >\n                <option value=\"\"></option>\n                {props.fieldTypes.map((field_type) => {\n                  return (\n                    <option key={field_type._id} value={field_type._id}>\n                      {\" \"}\n                      {field_type.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <label htmlFor=\"selectFieldTypes\">Field Type</label>\n            </div>\n            <div className=\"form-check form-switch col-2 m-auto\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n                name={id}\n                checked={fields[id].required}\n                onChange={(e) => {\n                  props.handleRequiredChange(e, id);\n                }}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Required\n              </label>\n            </div>\n            <div className=\"col-2 m-auto text-end\">\n              <button\n                className=\"btn btn-outline-danger btn-sm\"\n                onClick={(e) => props.handleDelete(e, id)}\n              >\n                x\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FormCreate;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nimport \"../App.css\";\nimport Loading from \"./Loading\";\nimport { ExportToExcel } from \"./ExportToExcel\";\nimport Moment from \"moment\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    const mDate = new Date();\n    mDate.setHours(0, 0, 0, 0);\n\n    this.state = {\n      dbRequests: [],\n      showDate: mDate,\n      fromDate: new Date(),\n      toDate: new Date(),\n      loading: true,\n      error: false,\n    };\n\n    this.handleShowAll = this.handleShowAll.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    const mDate = this.state.showDate;\n    mDate.setHours(0, 0, 0, 0);\n\n    const today = new Date();\n    today.setDate(today.getDate() + 1);\n\n    this.getRequests();\n  }\n\n  getRequests() {\n    this.setState({ error: false });\n    this.setState({ loading: true });\n\n    const mDate = this.state.showDate;\n    // mDate.setHours(0, 0, 0, 0);\n\n    // const today = new Date();\n    // today.setDate(today.getDate() + 1);\n    const to = this.state.toDate;\n\n    UserService.getDateRequests({\n      min_date: mDate,\n      max_date: to,\n    })\n      .then((res) => {\n        if (res.data) {\n          this.setState({ dbRequests: res.data });\n          this.setState({ loading: false });\n        }\n      })\n      .catch(() => {\n        this.setState({ error: true });\n      });\n  }\n\n  handleShowAll() {\n    this.setState({ showAll: !this.state.showAll });\n  }\n\n  handleDateChange(from) {\n    // switch (e.target.value) {\n    //   case \"0\":\n    //     this.setState({ showDate: new Date() }, () => {\n    //       this.getRequests();\n    //     });\n    //     break;\n    //   case \"1\":\n    //     const date = new Date();\n    //     const month = new Date(date.getFullYear(), date.getMonth(), 1);\n    //     this.setState({ showDate: month }, () => {\n    //       this.getRequests();\n    //     });\n    //     break;\n    //   case \"2\":\n    //     const new_date = new Date(1900, 1, 1);\n    //     this.setState({ showDate: new_date }, () => {\n    //       this.getRequests();\n    //     });\n    //     break;\n    // }\n    this.getRequests();\n  }\n\n  render() {\n    const { dbRequests } = this.state;\n\n    return (\n      <div>\n        <div className=\"container-fluid\">\n          <nav className=\"row navbar justify-content-center text-end pt-4\">\n            <div className=\"col-sm-6 col-md-5 col-lg-3 mb-2\">\n              <label className=\"form-label text-light h5 me-2\">From:</label>\n              <DateTimePicker\n                disableClock\n                maxDate={this.state.toDate}\n                value={this.state.showDate}\n                onChange={(val) => {\n                  val.setHours(0, 0, 0, 0);\n                  this.setState({ showDate: val });\n                }}\n                format=\"dd/MM/yyyy\"\n              />\n            </div>\n            <div className=\"col-sm-6 col-md-5 col-lg-3 mb-2\">\n              <label className=\"form-label text-light h5 me-2\">To:</label>\n              <DateTimePicker\n                disableClock\n                maxDate={new Date()}\n                value={this.state.toDate}\n                onChange={(val) => {\n                  val.setHours(23, 59, 59, 0);\n                  this.setState({ toDate: val });\n                }}\n                format=\"dd/MM/yyyy\"\n              />\n            </div>\n            <div className=\"col-2\">\n              <button\n                className=\"btn btn-outline-light\"\n                onClick={this.handleDateChange}\n              >\n                Show\n              </button>\n            </div>\n            {this.state.error ? (\n              <strong className=\"text-danger col mt-4\">\n                There was an error fetching requests. Check network connection\n                and refresh page.\n              </strong>\n            ) : (\n              \"\"\n            )}\n          </nav>\n        </div>\n        <div className=\" align-items-center mt-4\">\n          {this.state.loading ? (\n            <Loading />\n          ) : (\n            <ApprovalRequestsDisplay forms={dbRequests} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction timeStamp(date1, date2) {\n  var val = 0;\n\n  let date_val = new Date(date1);\n\n  val = date2.getTime() - date_val.getTime();\n\n  return Math.floor(val / (1000 * 3600 * 24));\n}\n\nfunction ApprovalRequestsDisplay(props) {\n  if (props.forms) {\n    return (\n      <div className=\"row\">\n        {props.forms.map((form) => {\n          if (form.final_approval === 0) {\n          } else {\n            return (\n              <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                <div className=\"card m-2\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      Employee Name: {form.filled_by}\n                    </h5>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">\n                      Time Submitted:{\" \"}\n                      {Moment(form.date_submitted).format(\n                        \"DD/MM/YYYY - h:mm A\"\n                      )}\n                    </h6>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">\n                      Time of Approval:{\" \"}\n                      {Moment(form.approval_date).format(\"DD/MM/YYYY - h:mm A\")}\n                    </h6>\n                    <p className=\"card-text text-muted\">\n                      Form Type: {form.form.name}\n                    </p>\n                    <div className=\"card-text\">\n                      {form.final_approval === 1 ? (\n                        <h4>\n                          <span className=\"badge rounded-pill mb-1 me-2 bg-success\">\n                            Approved\n                          </span>\n                        </h4>\n                      ) : (\n                        <h4>\n                          <span className=\"badge rounded-pill mb-1 me-2 bg-danger\">\n                            Not Approved\n                          </span>\n                        </h4>\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nfunction createExcelData(forms) {\n  let return_data = [];\n\n  for (let f of forms) {\n    let app = [];\n    let dis = [];\n    for (let a of f.approval) {\n      if (a.status === 1) {\n        app.push(a.approver.firstname);\n      } else if (a.status === 2) {\n        dis.push(a.approver.firstname);\n      }\n    }\n\n    let obj = {\n      \"Filled By\": f.filled_by,\n      \"Form Type\": f.form.name,\n      \"Approved By\": \"\".concat(app),\n      \"Dissaproved By\": \"\".concat(dis),\n      \"Date Filled\": Moment(f.date_submitted).format(\"DD/MM/YYYY - h:mm A\"),\n    };\n\n    return_data.push(obj);\n  }\n\n  return return_data;\n}\n\nfunction getApprovalStatuses(approval) {\n  var approvals = [];\n\n  for (let app of approval) {\n    if (app.status === 1) {\n      // console.log(app.status);\n      approvals.push({\n        status: \"bg-success\",\n        message: app.approver.firstname + \" Approved\",\n      });\n    } else if (app.status === 2) {\n      // console.log(app.firstname);\n      approvals.push({\n        status: \"bg-danger\",\n        message: app.approver.firstname + \" Disapproved\",\n      });\n    }\n  }\n\n  if (approvals.length === 0) {\n    approvals.push({\n      status: \"bg-warning\",\n      message: \"Approval Pending\",\n    });\n  }\n\n  return approvals;\n}\n\nexport default Dashboard;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\n\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nimport \"../App.css\";\nimport Loading from \"./Loading\";\nimport ManageUsers from \"./ManageUsers\";\nimport UserDetails from \"./UserDetails\";\nimport Signup from \"./Signup\";\nimport ManageRoles from \"./mod/ManageRoles\";\nimport RoleCreate from \"./mod/RoleCreate\";\nimport DepartmentCreate from \"./mod/DepartmentCreate\";\nimport RoleDetails from \"./mod/RoleDetails\";\nimport ManageForms from \"./mod/ManageForms\";\nimport FormDetails from \"./mod/FormDetails\";\nimport FormCreate from \"./mod/FormCreate\";\nimport Dashboard from \"./Dashboard\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser(),\n      dbRequests: [],\n      showAll: false,\n    };\n\n    this.handleShowAll = this.handleShowAll.bind(this);\n  }\n\n  componentDidMount() {\n    //    api\n    //      .get(\"/api/getapprovalrequests\")\n    //      .then((res) => {\n    //        if (res.data) {\n    //          this.setState({ dbRequests: res.data });\n    //        }\n    //      })\n    //      .catch();\n    UserService.getApprovalRequests()\n      .then((res) => {\n        if (res.data) {\n          let db_data = [];\n          for (let d of res.data) {\n            let pending = 0;\n            for (let app of d.approval) {\n              if (app.approver._id === AuthService.getCurrentUser().id) {\n                pending += app.status;\n              }\n            }\n            if (pending === 0) {\n              db_data.push({ ...d, show: true });\n            } else {\n              db_data.push({ ...d, show: false });\n            }\n          }\n\n          this.setState({ dbRequests: db_data });\n        }\n      })\n      .catch();\n  }\n\n  handleShowAll() {\n    this.setState({ showAll: !this.state.showAll });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <Switch>\n          <Route\n            exact\n            path=\"/mod/userdetails\"\n            component={() => <UserDetails />}\n          />\n          <Route\n            exact\n            path=\"/mod/role/details\"\n            component={() => <RoleDetails />}\n          />\n          <Route exact path=\"/mod/signup\" component={() => <Signup />} />\n          <Route exact path=\"/mod/users\" component={() => <ManageUsers />} />\n          <Route exact path=\"/mod/roles\" component={() => <ManageRoles />} />\n          <Route exact path=\"/mod/forms\" component={() => <ManageForms />} />\n\n          <Route\n            exact\n            path=\"/mod/roles/create\"\n            component={() => <RoleCreate />}\n          />\n          <Route\n            exact\n            path=\"/mod/form/details\"\n            component={() => <FormDetails />}\n          />\n          <Route\n            exact\n            path=\"/mod/roles/createdepartment\"\n            component={() => <DepartmentCreate />}\n          />\n          <Route\n            exact\n            path=\"/mod/forms/create\"\n            component={() => <FormCreate />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction timeStamp(date1, date2) {\n  var val = 0;\n\n  let date_val = new Date(date1);\n\n  val = date2.getTime() - date_val.getTime();\n\n  return Math.floor(val / (1000 * 3600 * 24));\n}\n\nfunction ApprovalRequestsList(props) {\n  if (props.forms) {\n    return props.forms.length !== 0 ? (\n      <div>\n        <div className=\"row mb-3 ms-1 me-1 mt-5\">\n          <div className=\"form-check form-switch col-6\">\n            <label\n              className=\"form-check-label text-light h5 ms-1\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Show all\n            </label>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n              onChange={props.handleShowAll}\n            ></input>\n          </div>\n          <div className=\"col-6 text-end\">\n            <button className=\"btn btn-outline-success\">Export to Excel</button>\n          </div>\n        </div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.forms\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return (\n                <Link\n                  to={\"/form/\" + data._id}\n                  className=\"list-group-item list-group-item-action\"\n                  key={\"Link_\" + data._id}\n                  style={{\n                    display: props.showAll || data.show ? \"block\" : \"none\",\n                  }}\n                >\n                  <div\n                    className=\"d-flex w-100 justify-content-between\"\n                    key={\"div_\" + data._id}\n                  >\n                    <h5 className=\"mb-2\">{data.filled_by}</h5>\n                    <small>\n                      {data.date_submitted\n                        ? timeStamp(data.date_submitted, new Date()) +\n                          \" days ago\"\n                        : \"\"}\n                    </small>\n                  </div>\n                  <p className=\"mb-2\">{data.form.name}</p>\n                  {getApprovalStatuses(data.approval).map((app) => {\n                    return (\n                      <span\n                        className={\"badge rounded-pill mb-1 me-2 \" + app.status}\n                      >\n                        {app.message}\n                      </span>\n                    );\n                  })}\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No requests to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nfunction getApprovalStatuses(approval) {\n  var approvals = [];\n\n  for (let app of approval) {\n    if (app.status === 1) {\n      // console.log(app.status);\n      approvals.push({\n        status: \"bg-success\",\n        message: app.approver.firstname + \" Approved\",\n      });\n    } else if (app.status === 2) {\n      // console.log(app.firstname);\n      approvals.push({\n        status: \"bg-danger\",\n        message: app.approver.firstname + \" Disapproved\",\n      });\n    }\n  }\n\n  if (approvals.length === 0) {\n    approvals.push({\n      status: \"bg-warning\",\n      message: \"Approval Pending\",\n    });\n  }\n\n  return approvals;\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/Beta-HealthcareLG-Trebuchet-MS-font.4688ae12.png\";","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Moment from \"moment\";\n\nimport Loading from \"./Loading\";\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"../images/Beta-HealthcareLG-Trebuchet-MS-font.png\";\n\nfunction FormApproval(props) {\n  //   constructor(props) {\n  //     super(props);\n\n  //     this.state = { name: \"\", formFields: [], formData: [], done: false };\n  //   }\n  const history = useHistory();\n  const { id } = useParams();\n  const [formData, setFormData] = useState([]);\n  const [formDate, setFormDate] = useState(\"\");\n  const [formApproved, setFormApproved] = useState(false);\n  const [formStatus, setFormStatus] = useState(0);\n  const [formComments, setFormComments] = useState(\"\");\n\n  const [clickedApprove, setClickedApprove] = useState(false);\n  const [clickedDisapprove, setClickedDisapprove] = useState(false);\n  const [appError, setAppError] = useState(false);\n\n  useEffect(\n    () => {\n      let isMounted = true;\n      // api\n      //   .get(`/api/getform/${id}`)\n      //   .then((res) => {\n      //     if (res.data && isMounted) {\n      //       setFormData(res.data);\n      //       if (res.data.date_filled) {\n      //         setFormDate(Moment(res.data.date_filled).format(\"DD-MM-YYYY\"));\n      //       }\n      //     }\n      //   })\n      //   .catch((err) => console.log(err));\n\n      const body = {\n        id: id,\n        approver: AuthService.getCurrentUser().id,\n      };\n\n      UserService.getApprovalRequest(body)\n        .then((res) => {\n          if (res.data && isMounted) {\n            setFormData(res.data);\n            if (res.data.date_submitted) {\n              setFormDate(\n                Moment(res.data.date_submitted).format(\"DD/MM/YYYY - h:mm A\")\n              );\n            }\n            if (res.data.approval) {\n              if (res.data.approval.status === 0) {\n                setFormApproved(false);\n                setFormStatus(0);\n                console.log(\"Form not approved\");\n              } else {\n                setFormApproved(true);\n                setFormStatus(res.data.approval.status);\n                setFormComments(res.data.approval.comments);\n                console.log(\"Form already approved!\");\n              }\n            } else {\n              setFormStatus(-1);\n              console.log(\"MOD\");\n            }\n          }\n        })\n        .catch((err) => console.log(err));\n\n      return () => {\n        isMounted = false;\n      };\n    },\n    [id],\n    [formApproved],\n    [formData]\n  );\n\n  function handleApproval(e) {\n    e.preventDefault();\n    setClickedApprove(true);\n    setAppError(false);\n    const body = {\n      request_id: id,\n      approver: AuthService.getCurrentUser().id,\n      action: 1,\n      comments: formComments,\n    };\n\n    UserService.updateApproval(body)\n      .then(() => {\n        setFormApproved(true);\n        setFormStatus(1);\n      })\n      .catch((e) => {\n        setClickedApprove(false);\n        setAppError(true);\n      });\n  }\n\n  function handleDisapproval(e) {\n    e.preventDefault();\n    setClickedDisapprove(true);\n    setAppError(false);\n    const body = {\n      request_id: id,\n      approver: AuthService.getCurrentUser().id,\n      action: 2,\n      comments: formComments,\n    };\n\n    console.log(body);\n\n    UserService.updateApproval(body)\n      .then(() => {\n        setFormApproved(true);\n        setFormStatus(2);\n      })\n      .catch((e) => {\n        setClickedDisapprove(false);\n        setAppError(true);\n      });\n  }\n\n  function handleComments(e) {\n    setFormComments(e.target.value);\n  }\n\n  return formData.length === 0 ? (\n    <Loading />\n  ) : (\n    <div className=\"container-fluid\">\n      <div className=\"container d-flex align-items-center justify-content-center mt-5\">\n        <div className=\"container-form\">\n          <form className=\"card bg-light bg-gradient\">\n            <div className=\"row card-body\">\n              <img src={logo} className=\"img-fluid\" alt=\"logo\"></img>\n            </div>\n            <div className=\"card-header\">\n              <div className=\"card-title\">\n                <h2 className=\"text-center\">\n                  {formData.form.name} - Approval Request\n                </h2>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">\n                  Employee Name:\n                </label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formData.filled_by}\n                    readOnly\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Department:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formData.department}\n                    readOnly\n                  />\n                </div>\n              </div>\n              {formData.fields.map((field) => {\n                return (\n                  <div key={\"div_\" + field._id} className=\"mb-3 row\">\n                    <label\n                      key={\"label_\" + field._id}\n                      className=\"col-sm-4 col-form-label\"\n                    >\n                      {field.name}:\n                    </label>\n                    <div className=\"col-sm-8\">\n                      {field.type.name === \"time\" ? (\n                        <input\n                          key={field._id}\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={Moment(field.value).format(\n                            \"DD/MM/YYYY - h:mm A\"\n                          )}\n                          readOnly\n                        />\n                      ) : (\n                        <input\n                          key={field._id}\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={field.value}\n                          readOnly\n                        />\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Date filled:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formDate}\n                    readOnly\n                  />\n                </div>\n              </div>\n            </div>\n            {formStatus != -1 ? (\n              formApproved ? (\n                <div className=\"card-footer row\">\n                  <p className=\"lead m-2 text-center mb-3\">\n                    This approval request was{\" \"}\n                    {formStatus === 1 ? (\n                      <strong className=\"text-success\">approved </strong>\n                    ) : (\n                      <strong className=\"text-danger\">disapproved </strong>\n                    )}\n                    by you.\n                  </p>\n                  <label className=\"col-sm-4 col-form-label mb-3\">\n                    Comments:\n                  </label>\n                  <div className=\"col-sm-8\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={formComments}\n                      readOnly\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div className=\"card-footer\">\n                  <div className=\"form-floating mb-3\">\n                    <textarea\n                      className=\"form-control\"\n                      placeholder=\"comments\"\n                      id=\"floatingTextarea\"\n                      style={{ height: \"100px\", \"max-height\": \"100px\" }}\n                      onChange={handleComments}\n                    ></textarea>\n                    <label className=\"text-muted\" htmlFor=\"floatingTextarea\">\n                      Leave a comment here\n                    </label>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-6 text-left\">\n                      {/* <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={handleDisapproval}\n                      >\n                        Disapprove\n                      </button> */}\n                      {clickedDisapprove ? (\n                        <button\n                          className=\"btn btn-danger\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            class=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          Loading...\n                        </button>\n                      ) : (\n                        <button\n                          className=\"btn btn-outline-danger\"\n                          onClick={handleDisapproval}\n                        >\n                          Disapprove\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"col-6 text-end\">\n                      {/* <button\n                        className=\"btn btn-outline-success\"\n                        onClick={handleApproval}\n                      >\n                        Approve\n                      </button> */}\n                      {clickedApprove ? (\n                        <button\n                          className=\"btn btn-success\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            class=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          Loading...\n                        </button>\n                      ) : (\n                        <button\n                          className=\"btn btn-outline-success\"\n                          onClick={handleApproval}\n                        >\n                          Approve\n                        </button>\n                      )}\n                    </div>\n                    {appError ? (\n                      <div className=\"col-12 text-center text-danger\">\n                        <strong>An error occured. Please try again.</strong>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                </div>\n              )\n            ) : (\n              <div className=\"card-footer row\">\n                <p className=\"lead m-2 text-center mb-3\">\n                  Your approval is currently not requested.\n                </p>\n              </div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FormApproval;\n","import React, { Component } from \"react\";\n\nimport AuthService from \"../services/auth.service\";\nimport FormResult from \"./FormResult\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      message: \"\",\n      invalidLogin: false,\n      clicked_login: false,\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({ clicked_login: true });\n    AuthService.login(this.state.username, this.state.password).then(\n      () => {\n        // this.props.history.push(\"/home\");\n        this.setState({ clicked_login: false });\n        window.location.reload();\n      },\n      (error) => {\n        this.setState({ clicked_login: false });\n        this.setState({ invalidLogin: true });\n      }\n    );\n  }\n\n  hideModal() {\n    this.setState({ invalidLogin: false });\n  }\n\n  render() {\n    return (\n      <div className=\"row justify-content-center mt-5\">\n        <div className=\"container-form \">\n          <form\n            className=\"card bg-light bg-gradient\"\n            onSubmit={this.handleLogin}\n          >\n            <div className=\"card-header\">\n              <div className=\"card-title\">\n                <h2 className=\"text-center\">Approver Login</h2>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Username:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={this.onChangeUsername}\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Password:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    onChange={this.onChangePassword}\n                  />\n                </div>\n              </div>\n            </div>\n            {/* {this.state.invalidLogin ? \"Invalid Login\" : \"\"} */}\n            <div className=\"card-footer text-end\">\n              {this.state.clicked_login ? (\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span\n                    class=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  Loading...\n                </button>\n              ) : (\n                <button className=\"btn btn-outline-primary\">Login</button>\n              )}\n            </div>\n          </form>\n          <FormResult\n            show={this.state.invalidLogin}\n            hideModal={this.hideModal}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport HomeMod from \"./components/HomeMod\";\nimport FormApproval from \"./components/FormApproval\";\nimport Login from \"./components/Login\";\nimport Loading from \"./components/Loading\";\nimport Dashboard from \"./components/Dashboard\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    if (!currentUser) {\n      return (\n        <div className=\"container align-items-center justify-content-center\">\n          <Switch>\n            <Route path=\"/\" component={() => <Login />} />\n          </Switch>\n        </div>\n      );\n    } else if (currentUser && currentUser.role.level === 4) {\n      return (\n        <div>\n          <div className=\"container-fluid\">\n            <nav className=\"row navbar navbar-light bg-dark rounded shadow-lg\">\n              <div className=\"col-4\">\n                <p className=\"navbar-brand text-light mt-1\">\n                  Welcome, {AuthService.getCurrentUser().firstname}!\n                </p>\n              </div>\n              <div className=\"col text-end\">\n                <Link className=\"btn btn-outline-light\" to=\"/\">\n                  Home\n                </Link>\n                <Link to=\"/dashboard\" className=\"btn btn-outline-warning ms-2\">\n                  Status Dashboard\n                </Link>\n                <Link to=\"/mod/users\" className=\"btn btn-outline-info ms-2\">\n                  Manage Users\n                </Link>\n                <Link to=\"/mod/forms\" className=\"btn btn-outline-info ms-2\">\n                  Manage Forms\n                </Link>\n                <button\n                  className=\"btn btn-outline-danger ms-2\"\n                  onClick={() => {\n                    AuthService.logout();\n                    window.location.replace(\"/\");\n                  }}\n                >\n                  Logout\n                </button>\n              </div>\n            </nav>\n          </div>\n          <Switch>\n            <Route path=\"/\" component={() => <HomeMod />} />\n            <Route exact path=\"/form/:id\" component={() => <FormApproval />} />\n          </Switch>\n          <div className=\"container align-items-center justify-content-center\">\n            <Switch>\n              <Route\n                exact\n                path=\"/dashboard\"\n                component={() => <Dashboard />}\n              ></Route>\n            </Switch>\n          </div>\n        </div>\n      );\n    } else if (currentUser && currentUser.role.level === 0) {\n      return (\n        <div className=\"\">\n          <div className=\"container-fluid\">\n            <nav className=\"row navbar navbar-light bg-dark rounded shadow-lg\">\n              <div className=\"col-4\">\n                <p className=\"navbar-brand text-light mt-1\">\n                  Welcome, {AuthService.getCurrentUser().firstname}!\n                </p>\n              </div>\n              <div className=\"col text-end\">\n                <Link to=\"/\" className=\"btn btn-outline-warning ms-2\">\n                  Status Dashboard\n                </Link>\n                <button\n                  className=\"btn btn-outline-danger ms-2\"\n                  onClick={() => {\n                    AuthService.logout();\n                    window.location.reload();\n                  }}\n                >\n                  Logout\n                </button>\n              </div>\n            </nav>\n          </div>\n          <div className=\"container align-items-center justify-content-center\">\n            <Switch>\n              <Route exact path=\"/\" component={() => <Dashboard />}></Route>\n            </Switch>\n          </div>\n        </div>\n      );\n    } else if (currentUser && currentUser.role.level) {\n      return (\n        <div>\n          <div className=\"container-fluid\">\n            <nav className=\"row navbar navbar-light bg-dark rounded shadow-lg\">\n              <div className=\"col-4\">\n                <p className=\"navbar-brand text-light mt-1\">\n                  Welcome, {AuthService.getCurrentUser().firstname}!\n                </p>\n              </div>\n              <div className=\"col text-end\">\n                <Link className=\"btn btn-outline-light\" to=\"/\">\n                  Home\n                </Link>\n                <Link to=\"/dashboard\" className=\"btn btn-outline-warning ms-2\">\n                  Status Dashboard\n                </Link>\n                <button\n                  className=\"btn btn-outline-danger ms-2\"\n                  onClick={() => {\n                    AuthService.logout();\n                    window.location.reload();\n                  }}\n                >\n                  Logout\n                </button>\n              </div>\n            </nav>\n          </div>\n          <Switch>\n            <Route exact path=\"/\" component={() => <Home />} />\n            {/* <Route exact path=\"/home\" component={() => <Home />} /> */}\n\n            <Route exact path=\"/form/:id\" component={() => <FormApproval />} />\n          </Switch>\n          <div className=\"container align-items-center justify-content-center\">\n            <Switch>\n              <Route\n                exact\n                path=\"/dashboard\"\n                component={() => <Dashboard />}\n              ></Route>\n            </Switch>\n          </div>\n        </div>\n      );\n    } else {\n      AuthService.logout();\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Dashboard from \"./components/Dashboard\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = {\n  ADDR: \"\",\n};\n"],"sourceRoot":""}