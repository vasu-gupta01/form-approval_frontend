{"version":3,"sources":["services/auth.service.js","services/auth-header.js","services/user.service.js","components/Loading.js","components/ExportToExcel.js","components/Home.js","components/ManageUsers.js","components/UserDetails.js","components/FormResult.js","components/Signup.js","components/mod/ManageRoles.js","components/mod/RoleCreate.js","components/mod/DepartmentCreate.js","components/mod/RoleDetails.js","components/mod/ManageForms.js","components/mod/FormDetails.js","components/mod/FormCreate.js","components/Dashboard.js","components/HomeMod.js","images/Beta-HealthcareLG-Trebuchet-MS-font.png","components/FormApproval.js","components/Login.js","components/FormView.js","App.js","index.js","config/config.js"],"names":["API_URL","config","ADDR","username","password","axios","post","then","response","data","accessToken","localStorage","setItem","JSON","stringify","removeItem","firstname","lastname","role","parse","getItem","authHeader","user","body","headers","get","Loading","className","ExportToExcel","apiData","fileName","onClick","e","wb","Sheets","XLSX","json_to_sheet","SheetNames","excelBuffer","bookType","type","Blob","FileSaver","exportToCSV","timeStamp","date1","date2","val","date_val","Date","getTime","Math","floor","DateRange","props","disableClock","maxDate","toDate","value","fromDate","onChange","setHours","setDateChange","format","handleDateChange","ApprovalRequestsList","forms","length","htmlFor","id","handleShowAll","createExcelData","slice","reverse","map","to","_id","style","display","showAll","show","filled_by","date_submitted","form","name","getApprovalStatuses","approval","app","status","message","return_data","f","dis","a","push","approver","obj","concat","Moment","viewer_fields","vf","fields","final_approval","approval_date","approvals","Home","mDate","state","currentUser","AuthService","getCurrentUser","dbRequests","bind","this","getRequests","UserService","getApprovalRequests","min_date","max_date","res","db_data","d","pending","setState","catch","from","Component","UsersList","users","pathname","description","ManageUsers","useState","setUsers","useEffect","getUsers","UserDetails","useLocation","roles","setRoles","setFirstname","setLastname","setUsername","email","setEmail","setRole","setPassword","clicked_create","setClickedCreate","error","setError","missingField","setMissingField","getRoles","onSubmit","preventDefault","updateApprover","window","location","replace","target","disabled","class","aria-hidden","FormResult","Modal","dialogClassName","Header","Title","Body","Footer","as","hideModal","Signup","invalidLogin","handleSignup","handleChange","field","register","selected","RolesList","level","ManageRoles","RoleCreate","department","field_missing","departments","handleCreate","getDepartments","desc","dep","lvl","createRole","placeholder","DepartmentCreate","new_departments","counter","handleNewChange","handleUpdatedChange","handleDelete","handleAdd","resp","deps","new_dep_data","missing_err","new_departs","Object","keys","update_dep_data","update_departs","console","log","createDepartment","updateDepartment","new_deps","count","RoleDetails","setDepartments","setDescription","setName","setLevel","setDepartment","updateRole","FormsList","date_created","finals","ManageForms","setForms","getForms","FormFieldsEdit","setFields","handleFieldNameChange","handleFieldTypeChange","fieldTypes","field_type","checked","required","handleRequiredChange","FormDetails","setFieldTypes","level_one","setLevelOne","level_two","setLevelTwo","level_three","setLevelThree","setFinalApprovers","setListOfApprovers","getFieldTypes","new_fields","stages","s","getApprovers","approvers","fields_array","fields_error","1","2","3","updateForm","autoComplete","field_id","current_fields","new_field","FormCreate","handleViewerFieldTypeChange","handleViewerFieldNameChange","handleViewerFieldDelete","counter_viewer","handleViewerAdd","handleAddFinalApprover","current_approvers","final_approvers","list_of_approvers","fieldViewerTypes","getFieldViewerTypes","nm","viewer_fields_array","approvers_array","createForm","ApprovalRequestsDisplay","Dashboard","showDate","loading","today","setDate","getDate","getDateRequests","exact","path","component","FormApproval","useHistory","useParams","formData","setFormData","formDate","setFormDate","formApproved","setFormApproved","formStatus","setFormStatus","formComments","setFormComments","clickedApprove","setClickedApprove","clickedDisapprove","setClickedDisapprove","appError","setAppError","isMounted","getApprovalRequest","comments","err","src","logo","alt","readOnly","height","request_id","action","updateApproval","Login","clicked_login","handleLogin","onChangeUsername","onChangePassword","login","reload","ViewerField","fieldValue","setFieldValue","filled","setFilled","date","handleViewerFieldChange","FormView","viewerFields","setViewerFields","getViewerfields","view_fields","view_fields_array","v","updateRequestViewerFields","f_id","current","current_array","c","App","logout","HomeMod","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.ea254b7e.chunk.js","sourcesContent":["import axios from \"axios\";\nimport config from \"../config/config\";\n\nconst API_URL = config.ADDR + \"/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", { username, password })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, firstname, lastname, role, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      firstname,\n      lastname,\n      role,\n      password,\n    });\n  }\n\n  getCurrentUser() {\n    return JSON.parse(localStorage.getItem(\"user\"));\n  }\n}\n\nexport default new AuthService();\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    return { \"x-access-token\": user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\nimport config from \"../config/config\";\n\nconst API_URL = \"/api/\";\n\nclass UserService {\n  getDateRequests(body) {\n    return axios.post(API_URL + \"dashapprovalrequests\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  getApprovalRequests(body) {\n    return axios.post(API_URL + \"getapprovalrequests\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  getUsers() {\n    return axios.get(API_URL + \"getapprovers\", {\n      headers: authHeader(),\n    });\n  }\n\n  getApprovers() {\n    return axios.get(API_URL + \"getapproverswithoutmod\", {\n      headers: authHeader(),\n    });\n  }\n\n  getRoles() {\n    return axios.get(API_URL + \"getroles\", { headers: authHeader() });\n  }\n\n  getDepartments() {\n    return axios.get(API_URL + \"getdepartments\", { headers: authHeader() });\n  }\n\n  updateApproval(body) {\n    return axios.post(API_URL + \"updateapproval\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updateApprover(body) {\n    return axios.post(API_URL + \"approver/update\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updateRole(body) {\n    return axios.post(API_URL + \"role/update\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updateRequestViewerFields(body) {\n    return axios.post(API_URL + \"updaterequestviewerfields\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updaterequestviewerfields;\n\n  createRole(body) {\n    return axios.post(API_URL + \"createrole\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  createDepartment(body) {\n    return axios.post(API_URL + \"createdepartment\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updateDepartment(body) {\n    return axios.post(API_URL + \"updatedepartment\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  createForm(body) {\n    return axios.post(API_URL + \"createform\", body, { headers: authHeader() });\n  }\n\n  getApprovalRequest(body) {\n    return axios.post(API_URL + \"getapprovalrequest\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  getForms() {\n    return axios.get(API_URL + \"getforms\", { headers: authHeader() });\n  }\n\n  getFieldTypes() {\n    return axios.get(API_URL + \"getfieldtypes\", { headers: authHeader() });\n  }\n\n  getFieldViewerTypes() {\n    return axios.get(API_URL + \"getviewerfieldtypes\", {\n      headers: authHeader(),\n    });\n  }\n\n  getViewerfields(body) {\n    return axios.post(API_URL + \"getviewerfields\", body, {\n      headers: authHeader(),\n    });\n  }\n\n  updateForm(body) {\n    return axios.post(API_URL + \"updateform\", body, { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import \"bootstrap/dist/css/bootstrap.min.css\";\n\nexport default function Loading() {\n  return (\n    <div className=\"d-flex justify-content-center text-center text-light\">\n      <div className=\"row\">\n        <div className=\"col-12 mb-2\">\n          <div className=\"spinner-border\" role=\"status\">\n            <span className=\"visually-hidden\">Loading...</span>\n          </div>\n        </div>\n        <div className=\"col-12\">\n          <strong className=\"\">Loading...</strong>\n        </div>\n      </div>\n    </div>\n  );\n}\n","// Code snippet from - https://dev.to/jasurkurbanovinit/how-to-export-data-to-excel-from-api-using-react-25go\n\nimport React from \"react\";\nimport * as FileSaver from \"file-saver\";\nimport * as XLSX from \"xlsx\";\n\nexport const ExportToExcel = ({ apiData, fileName }) => {\n  const fileType =\n    \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\";\n  const fileExtension = \".xlsx\";\n\n  const exportToCSV = (apiData, fileName) => {\n    const ws = XLSX.utils.json_to_sheet(apiData);\n    const wb = { Sheets: { data: ws }, SheetNames: [\"data\"] };\n    const excelBuffer = XLSX.write(wb, { bookType: \"xlsx\", type: \"array\" });\n    const data = new Blob([excelBuffer], { type: fileType });\n    FileSaver.saveAs(data, fileName + fileExtension);\n  };\n\n  return (\n    <button\n      className=\"btn btn-outline-success\"\n      onClick={(e) => exportToCSV(apiData, fileName)}\n    >\n      Export to Excel\n    </button>\n  );\n};\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nimport \"../App.css\";\nimport Loading from \"./Loading\";\nimport { ExportToExcel } from \"./ExportToExcel\";\nimport Moment from \"moment\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    const mDate = new Date();\n    mDate.setHours(0, 0, 0, 0);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser(),\n      dbRequests: [],\n      showAll: false,\n      fromDate: mDate,\n      toDate: new Date(),\n    };\n\n    this.handleShowAll = this.handleShowAll.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n    this.setDateChange = this.setDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    //    api\n    //      .get(\"/api/getapprovalrequests\")\n    //      .then((res) => {\n    //        if (res.data) {\n    //          this.setState({ dbRequests: res.data });\n    //        }\n    //      })\n    //      .catch();\n    this.getRequests();\n  }\n\n  getRequests() {\n    UserService.getApprovalRequests({\n      min_date: this.state.fromDate,\n      max_date: this.state.toDate,\n    })\n      .then((res) => {\n        if (res.data) {\n          let db_data = [];\n          for (let d of res.data) {\n            let pending = 0;\n            for (let app of d.approval) {\n              if (app.approver._id === AuthService.getCurrentUser().id) {\n                pending += app.status;\n              }\n            }\n            if (pending === 0) {\n              db_data.push({ ...d, show: true });\n            } else {\n              db_data.push({ ...d, show: false });\n            }\n          }\n\n          this.setState({ dbRequests: db_data });\n        }\n      })\n      .catch();\n  }\n\n  handleShowAll() {\n    this.setState({ showAll: !this.state.showAll });\n  }\n\n  handleDateChange() {\n    this.getRequests();\n  }\n\n  setDateChange(from, to) {\n    this.setState({ fromDate: from, toDate: to });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div>\n        <div className=\"container d-flex align-items-center justify-content-center\">\n          <DateRange\n            fromDate={this.state.fromDate}\n            toDate={this.state.toDate}\n            handleDateChange={this.handleDateChange}\n            setDateChange={this.setDateChange}\n          />\n        </div>\n        <div className=\"d-flex align-items-center justify-content-center\">\n          <ApprovalRequestsList\n            forms={this.state.dbRequests}\n            handleShowAll={this.handleShowAll}\n            showAll={this.state.showAll}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction timeStamp(date1, date2) {\n  var val = 0;\n\n  let date_val = new Date(date1);\n\n  val = date2.getTime() - date_val.getTime();\n\n  return Math.floor(val / (1000 * 3600 * 24));\n}\n\nfunction DateRange(props) {\n  return (\n    <div className=\"row\">\n      <div className=\"col-sm-6 col-md-6 col-lg-5 mb-1\">\n        <div>\n          <label className=\"form-label text-light h5 me-1\">From:</label>\n        </div>\n        <DateTimePicker\n          disableClock\n          maxDate={props.toDate}\n          value={props.fromDate}\n          onChange={(val) => {\n            val.setHours(0, 0, 0, 0);\n            props.setDateChange(val, props.toDate);\n            // this.setState({ showDate: val });\n          }}\n          format=\"dd/MM/yyyy\"\n        />\n      </div>\n      <div className=\"col-sm-6 col-md-6 col-lg-5 mb-1\">\n        <div>\n          <label className=\"form-label text-light h5 me-1\">To:</label>\n        </div>\n\n        <DateTimePicker\n          disableClock\n          maxDate={new Date()}\n          value={props.toDate}\n          onChange={(val) => {\n            val.setHours(23, 59, 59, 0);\n            props.setDateChange(props.fromDate, val);\n            // this.setState({ toDate: val });\n          }}\n          format=\"dd/MM/yyyy\"\n        />\n      </div>\n      <div className=\"col-md-2 col-lg-2 mt-lg-4\">\n        <button\n          className=\"btn btn-outline-light\"\n          onClick={props.handleDateChange}\n        >\n          Show\n        </button>\n      </div>\n    </div>\n  );\n}\n\nfunction ApprovalRequestsList(props) {\n  if (props.forms) {\n    return props.forms.length !== 0 ? (\n      <div>\n        <div className=\"row mb-3 ms-1 me-1 mt-5\">\n          <div className=\"form-check form-switch col-6\">\n            <label\n              className=\"form-check-label text-light h5 ms-1\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Show all\n            </label>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n              onChange={props.handleShowAll}\n            ></input>\n          </div>\n          <div className=\"col-6\">\n            <ExportToExcel\n              apiData={createExcelData(props.forms)}\n              fileName=\"myfile\"\n            />\n          </div>\n        </div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.forms\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return (\n                <Link\n                  to={\"/form/\" + data._id}\n                  className=\"list-group-item list-group-item-action\"\n                  key={\"Link_\" + data._id}\n                  style={{\n                    display: props.showAll || data.show ? \"block\" : \"none\",\n                  }}\n                >\n                  <div\n                    className=\"d-flex w-100 justify-content-between\"\n                    key={\"div_\" + data._id}\n                  >\n                    <h5 className=\"mb-2\">{data.filled_by}</h5>\n                    <small>\n                      {data.date_submitted\n                        ? timeStamp(data.date_submitted, new Date()) +\n                          \" days ago\"\n                        : \"\"}\n                    </small>\n                  </div>\n                  <p className=\"mb-2\">{data.form.name}</p>\n                  {getApprovalStatuses(data.approval).map((app) => {\n                    return (\n                      <span\n                        className={\"badge rounded-pill mb-1 me-2 \" + app.status}\n                      >\n                        {app.message}\n                      </span>\n                    );\n                  })}\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No requests to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nfunction createExcelData(forms) {\n  let return_data = [];\n\n  for (let f of forms) {\n    let app = [];\n    let dis = [];\n    for (let a of f.approval) {\n      if (a.status === 1) {\n        app.push(\" \" + a.approver.firstname + \" \" + a.approver.lastname);\n      } else if (a.status === 2) {\n        dis.push(\" \" + a.approver.firstname + \" \" + a.approver.lastname);\n      }\n    }\n\n    let obj = {\n      \"Filled By\": f.filled_by,\n      \"Form Type\": f.form.name,\n      \"Approved By\": \"\".concat(app),\n      \"Dissaproved By\": \"\".concat(dis),\n      \"Date Filled\": Moment(f.date_submitted).format(\"DD/MM/YYYY - h:mm A\"),\n    };\n\n    if (f.viewer_fields && f.viewer_fields.length >= 0) {\n      f.viewer_fields.map((vf) => {\n        if (vf.type.name === \"button-time\") {\n          obj[vf.name] = Moment(vf.value).format(\"DD/MM/YYYY - h:mm A\");\n        } else {\n          obj[vf.name] = vf.value;\n        }\n      });\n    }\n\n    if (f.fields && f.fields.length >= 0) {\n      f.fields.map((vf) => {\n        if (vf.type.name === \"time\") {\n          obj[vf.name] = Moment(vf.value).format(\"DD/MM/YYYY - h:mm A\");\n        } else {\n          obj[vf.name] = vf.value;\n        }\n      });\n    }\n\n    if (f.final_approval === 1) {\n      obj[\"Final Approval Status\"] = \"Approved -- \".concat(\n        Moment(f.approval_date).format(\"DD/MM/YYYY - h:mm A\")\n      );\n    } else if (f.final_approval === 2) {\n      obj[\"Final Approval Status\"] = \"Not Approved -- \".concat(\n        Moment(f.approval_date).format(\"DD/MM/YYYY - h:mm A\")\n      );\n    } else if (f.final_approval === 0) {\n      obj[\"Final Approval Status\"] = \"Pending\";\n    }\n\n    return_data.push(obj);\n  }\n\n  return return_data;\n}\n\nfunction getApprovalStatuses(approval) {\n  var approvals = [];\n\n  for (let app of approval) {\n    if (app.status === 1) {\n      // console.log(app.status);\n      approvals.push({\n        status: \"bg-success\",\n        message: app.approver.firstname + \" Approved\",\n      });\n    } else if (app.status === 2) {\n      // console.log(app.firstname);\n      approvals.push({\n        status: \"bg-danger\",\n        message: app.approver.firstname + \" Disapproved\",\n      });\n    }\n  }\n\n  if (approvals.length === 0) {\n    approvals.push({\n      status: \"bg-warning\",\n      message: \"Approval Pending\",\n    });\n  }\n\n  return approvals;\n}\n\nexport default Home;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\nimport Loading from \"./Loading\";\n\nfunction ManageUsers(props) {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    UserService.getUsers().then((res) => {\n      if (res.data) {\n        setUsers(res.data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"mt-2\">\n      <div className=\"row mb-3\">\n        <div className=\"col-12 text-light\">\n          <h4>Manage Users</h4>\n        </div>\n\n        <div className=\"col\">\n          <Link to=\"/mod/signup\" className=\"btn btn-outline-light\">\n            + Add User\n          </Link>\n        </div>\n        <div className=\"col\">\n          <Link to=\"/mod/roles\" className=\"btn btn-outline-light\">\n            Manage Roles\n          </Link>\n        </div>\n      </div>\n      <UsersList users={users} />\n    </div>\n  );\n}\n\nfunction UsersList(props) {\n  if (props.users) {\n    return props.users.length !== 0 ? (\n      <div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.users\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return (\n                <Link\n                  to={{ pathname: \"/mod/userdetails\", state: { user: data } }}\n                  className=\"list-group-item list-group-item-action\"\n                  key={\"Link_\" + data._id}\n                >\n                  <div\n                    className=\"d-flex w-100 justify-content-between\"\n                    key={\"div_\" + data._id}\n                  ></div>\n                  <h5>{data.firstname + \" \" + data.lastname}</h5>\n                  <p className=\"mb-2\">Username: {data.username}</p>\n                  <p className=\"mb-2\">Role: {data.role.description}</p>\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No users to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nexport default ManageUsers;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport UserService from \"../services/user.service\";\n\nfunction UserDetails(props) {\n  const location = useLocation();\n  const { user } = location.state;\n  const [roles, setRoles] = useState([]);\n\n  const [firstname, setFirstname] = useState(\"\");\n  const [lastname, setLastname] = useState(\"\");\n  const [username, setUsername] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [role, setRole] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [clicked_create, setClickedCreate] = useState(false);\n  const [error, setError] = useState(false);\n  const [missingField, setMissingField] = useState(false);\n\n  useEffect(() => {\n    UserService.getRoles().then((res) => {\n      if (res.data) {\n        setRoles(res.data);\n      }\n    });\n    setFirstname(user.firstname);\n    setLastname(user.lastname);\n    setUsername(user.username);\n    setEmail(user.email);\n    setRole(user.role._id);\n  }, []);\n\n  let handleUpdate = (e) => {\n    e.preventDefault();\n    setClickedCreate(true);\n    let body = {};\n    if (username === \"\") {\n      setError(false);\n      setClickedCreate(false);\n      setMissingField(true);\n    } else {\n      setMissingField(false);\n      if (password === \"\") {\n        body = {\n          id: user._id,\n          username: username,\n          firstname: firstname,\n          lastname: lastname,\n          role: role,\n          email: email,\n        };\n      } else {\n        body = {\n          id: user._id,\n          username: username,\n          firstname: firstname,\n          lastname: lastname,\n          role: role,\n          password: password,\n          email: email,\n        };\n      }\n\n      UserService.updateApprover(body).then(\n        () => {\n          window.location.replace(\"/mod/users\");\n        },\n        (error) => {\n          setClickedCreate(false);\n          setError(true);\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"container container-form d-flex align-items-center justify-content-center mt-5\">\n      <form className=\"card bg-light bg-gradient\" onSubmit={handleUpdate}>\n        <div className=\"card-header\">\n          <div className=\"card-title\">\n            <h2 className=\"text-center\">{user.firstname} - User Details</h2>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Firstname:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={firstname}\n                onChange={(e) => {\n                  setFirstname(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Lastname:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={lastname}\n                onChange={(e) => {\n                  setLastname(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          {user.role.name == \"mod\" ? (\n            \"\"\n          ) : (\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Username:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  value={username}\n                  onChange={(e) => {\n                    setUsername(e.target.value);\n                  }}\n                />\n              </div>\n            </div>\n          )}\n\n          {user.role.name === \"mod\" ? (\n            \"\"\n          ) : (\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Role:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  type=\"text\"\n                  className=\"form-select\"\n                  value={role}\n                  onChange={(e) => {\n                    setRole(e.target.value);\n                  }}\n                >\n                  {roles.map((role) => {\n                    return (\n                      <option value={role._id}>\n                        {role.name} - {role.description}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n            </div>\n          )}\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Email:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={email}\n                onChange={(e) => {\n                  setEmail(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">New Password:</label>\n            <div\n              className=\"col-sm-8\"\n              value={password}\n              onChange={(e) => {\n                setPassword(e.target.value);\n              }}\n            >\n              <input type=\"password\" className=\"form-control\" />\n            </div>\n          </div>\n          {error ? (\n            <strong className=\"text-danger mt-2\">\n              Error submitting request. Check connection.\n            </strong>\n          ) : (\n            \"\"\n          )}\n          {missingField ? (\n            <strong className=\"text-danger\">Username is required.</strong>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"row\">\n            <div className=\"col-12 text-end\">\n              {clicked_create ? (\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span\n                    class=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  Loading...\n                </button>\n              ) : (\n                <button className=\"btn btn-outline-primary\">Update</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default UserDetails;\n","import React from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport { Link } from \"react-router-dom\";\n\nfunction FormResult(props) {\n  // const [isOpen, setIsOpen] = useState(false);\n\n  const success = true;\n\n  // useEffect(() => {\n  //   setIsOpen(props.show);\n  // }, [props.show]);\n\n  // const showModal = () => {\n  //   setIsOpen(true);\n  // };\n\n  // const hideModal = () => {\n  //   setIsOpen(false);\n  // };\n\n  return success ? (\n    <Modal show={props.show} dialogClassName=\"modal-dialog-centered\">\n      <div className=\"\">\n        <Modal.Header>\n          <Modal.Title className=\"text-danger bg-gradient\">\n            Login failed\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>Please check your username/password.</Modal.Body>\n        <Modal.Footer as=\"footer\">\n          <button className=\"btn btn-outline-dark\" onClick={props.hideModal}>\n            Close\n          </button>\n        </Modal.Footer>\n      </div>\n    </Modal>\n  ) : (\n    <div className=\"container container-form alert alert-danger\" role=\"alert\">\n      <h5 className=\"alert-heading\">Submission failed</h5>\n      <hr />\n      <p className=\"mb-0\">\n        <Link className=\"btn btn-primary\" to=\"/\">\n          Click here\n        </Link>{\" \"}\n        to fill another form\n      </p>\n    </div>\n  );\n}\n\n// const SuccessMessage = () => {\n//   return (\n//     <div className=\"container container-form alert alert-success\" role=\"alert\">\n//       <h5 className=\"alert-heading\">\n//         Your approval request was successfully submitted!\n//       </h5>\n//       <hr />\n//       <p className=\"mb-0\">\n//         <Link className=\"btn btn-outline-dark\" to=\"/\">\n//           Click here\n//         </Link>{\" \"}\n//         to fill another form\n//       </p>\n//     </div>\n//   );\n// };\n\n// function FailureMessage() {}\n\nexport default FormResult;\n","import React, { Component } from \"react\";\n\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport FormResult from \"./FormResult\";\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      message: \"\",\n      role: \"\",\n      firstname: \"\",\n      lastname: \"\",\n      email: \"\",\n      invalidLogin: false,\n      roles: [],\n    };\n\n    this.handleSignup = this.handleSignup.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    //get roles\n    UserService.getRoles().then((res) => {\n      if (res.data) {\n        this.setState({ roles: res.data });\n      }\n    });\n  }\n\n  handleChange(e, field) {\n    let state = this.state;\n    state[field] = e.target.value;\n\n    this.setState(state);\n  }\n\n  handleSignup(e) {\n    e.preventDefault();\n\n    AuthService.register(\n      this.state.username,\n      this.state.firstname,\n      this.state.lastname,\n      this.state.role,\n      this.state.password,\n      this.state.email\n    ).then(\n      () => {\n        window.location.replace(\"users\");\n      },\n      (error) => {\n        this.setState({ invalidLogin: true });\n      }\n    );\n  }\n\n  hideModal() {\n    this.setState({ invalidLogin: false });\n  }\n\n  render() {\n    const { roles } = this.state;\n    return (\n      <div className=\"container-form mt-5\">\n        <form\n          className=\"card bg-light bg-gradient\"\n          onSubmit={this.handleSignup}\n        >\n          <div className=\"card-header\">\n            <div className=\"card-title\">\n              <h2 className=\"text-center\">Create new user</h2>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Username:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"username\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Password:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"password\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"password\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Firstname:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"firstname\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Lastname:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"lastname\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Roles:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  className=\"form-select\"\n                  onChange={(e) => this.handleChange(e, \"role\")}\n                >\n                  <option selected value=\"\">\n                    -- role --\n                  </option>\n                  {roles.map((role) => {\n                    return (\n                      <option value={role._id}>\n                        {role.name} - {role.description}\n                      </option>\n                    );\n                  })}\n                </select>\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Email:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"email\")}\n                />\n              </div>\n            </div>\n          </div>\n          {/* {this.state.invalidLogin ? \"Invalid Login\" : \"\"} */}\n          <div className=\"card-footer text-end\">\n            <button className=\"btn btn-outline-primary\">Create</button>\n          </div>\n        </form>\n        <FormResult show={this.state.invalidLogin} hideModal={this.hideModal} />\n      </div>\n    );\n  }\n}\n\nexport default Signup;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport UserService from \"../../services/user.service\";\nimport Loading from \"../Loading\";\n\nfunction ManageRoles(props) {\n  const [roles, setRoles] = useState([]);\n\n  useEffect(() => {\n    UserService.getRoles().then((res) => {\n      if (res.data) {\n        setRoles(res.data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"mt-2\">\n      <div className=\"row mb-3\">\n        <div className=\"col-12 text-light\">\n          <h4>Roles</h4>\n        </div>\n        <div className=\"col-4\">\n          <Link to=\"/mod/roles/create\" className=\"btn btn-outline-light\">\n            + Add role\n          </Link>\n        </div>\n        <div className=\"col-6\">\n          <Link\n            to=\"/mod/roles/createdepartment\"\n            className=\"btn btn-outline-light\"\n          >\n            Manage Departments\n          </Link>\n        </div>\n      </div>\n      <RolesList roles={roles} />\n    </div>\n  );\n}\n\nfunction RolesList(props) {\n  if (props.roles) {\n    return props.roles.length !== 0 ? (\n      <div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.roles\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              if (data.name !== \"mod\") {\n                return (\n                  <Link\n                    to={{\n                      pathname: \"/mod/role/details\",\n                      state: { role: data },\n                    }}\n                    className=\"list-group-item list-group-item-action\"\n                    key={\"Link_\" + data._id}\n                  >\n                    <div\n                      className=\"d-flex w-100 justify-content-between\"\n                      key={\"div_\" + data._id}\n                    ></div>\n                    <h5>{data.description}</h5>\n                    <p className=\"mb-2\">Type: {data.name}</p>\n                    <p className=\"mb-2\">Access Level: {data.level}</p>\n                  </Link>\n                );\n              }\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No roles to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nexport default ManageRoles;\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nclass RoleCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      type: \"\",\n      description: \"\",\n      department: \"\",\n      level: \"\",\n      clicked_create: false,\n      error: false,\n      field_missing: false,\n      departments: [],\n    };\n\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getDepartments().then((res) => {\n      if (res.data) {\n        this.setState({ departments: res.data });\n      }\n    });\n  }\n\n  handleChange(e, field) {\n    let state = this.state;\n    state[field] = e.target.value;\n\n    this.setState(state);\n  }\n\n  handleCreate(e) {\n    e.preventDefault();\n    this.setState({ clicked_create: true });\n\n    const type = this.state.type;\n    const desc = this.state.description;\n    const dep = this.state.department;\n    const lvl = this.state.level;\n\n    if (type === \"\" && lvl === \"\") {\n      this.setState({ field_missing: true });\n      this.setState({ clicked_create: false });\n    } else {\n      this.setState({ field_missing: false });\n      UserService.createRole({\n        name: type,\n        description: desc,\n        department: dep,\n        level: lvl,\n      }).then(\n        () => {\n          this.setState({ clicked_create: false });\n          window.location.replace(\"/mod/roles\");\n        },\n        (error) => {\n          this.setState({ clicked_create: false });\n          this.setState({ error: true });\n        }\n      );\n    }\n  }\n\n  render() {\n    const { departments } = this.state;\n    return (\n      <div className=\"container-form mt-5\">\n        <form\n          className=\"card bg-light bg-gradient\"\n          onSubmit={this.handleCreate}\n        >\n          <div className=\"card-header\">\n            <div className=\"card-title\">\n              <h2 className=\"text-center\">Create new role</h2>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Type:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  placeholder=\"e.g. HOD\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"type\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Description:</label>\n              <div className=\"col-sm-8\">\n                <input\n                  placeholder=\"e.g. Head of IT\"\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => this.handleChange(e, \"description\")}\n                />\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Department:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  className=\"form-select\"\n                  onChange={(e) => this.handleChange(e, \"department\")}\n                >\n                  <option selected value=\"\">\n                    -- department --\n                  </option>\n                  {departments.map((dep) => {\n                    return <option value={dep._id}>{dep.name}</option>;\n                  })}\n                </select>\n              </div>\n            </div>\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Access level:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  className=\"form-select\"\n                  onChange={(e) => this.handleChange(e, \"level\")}\n                >\n                  <option selected value=\"\">\n                    -- access level --\n                  </option>\n                  <option value=\"0\">level 0 -- only view</option>\n                  <option value=\"1\">\n                    level 1 -- view/approve department only\n                  </option>\n                  <option value=\"2\">level 2 -- view/approve all</option>\n                  <option value=\"3\">level 3 -- view/approve all</option>\n                </select>\n              </div>\n            </div>\n            {this.state.error ? (\n              <strong className=\"text-danger mt-2\">\n                Error submitting request. Check connection.\n              </strong>\n            ) : (\n              \"\"\n            )}\n            {this.state.field_missing ? (\n              <strong className=\"text-danger\">\n                Type and Access level fields are required.\n              </strong>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"card-footer text-end\">\n            {this.state.clicked_create ? (\n              <button className=\"btn btn-primary\" type=\"button\" disabled>\n                <span\n                  class=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </button>\n            ) : (\n              <button className=\"btn btn-outline-primary\">Create</button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RoleCreate;\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nclass DepartmentCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      clicked_create: false,\n      error: false,\n      field_missing: false,\n      departments: {},\n      new_departments: {},\n      counter: 0,\n    };\n\n    this.handleCreate = this.handleCreate.bind(this);\n    this.handleNewChange = this.handleNewChange.bind(this);\n    this.handleUpdatedChange = this.handleUpdatedChange.bind(this);\n\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getDepartments().then((resp) => {\n      if (resp.data) {\n        let deps = {};\n        resp.data.map((d) => {\n          deps[d._id] = d;\n        });\n        this.setState({ departments: deps });\n      }\n    });\n  }\n\n  handleNewChange(e, field) {\n    let deps = this.state.new_departments;\n    deps[field].name = e.target.value;\n\n    this.setState({ new_departments: deps });\n  }\n\n  handleUpdatedChange(e, field) {\n    let deps = this.state.departments;\n    deps[field].name = e.target.value;\n\n    this.setState({ departments: deps });\n  }\n\n  handleCreate(e) {\n    e.preventDefault();\n    this.setState({ clicked_create: true });\n\n    const nm = this.state.name;\n\n    let new_dep_data = [];\n    let missing_err = false;\n    const new_departs = this.state.new_departments;\n    Object.keys(new_departs).map((d) => {\n      if (new_departs[d].name === \"\") {\n        missing_err = true;\n      } else {\n        new_dep_data.push({ name: new_departs[d].name });\n      }\n    });\n\n    let update_dep_data = [];\n    const update_departs = this.state.departments;\n    Object.keys(update_departs).map((d) => {\n      if (update_departs[d].name === \"\") {\n        missing_err = true;\n      } else {\n        update_dep_data.push({ id: d, name: update_departs[d].name });\n      }\n    });\n\n    if (missing_err) {\n      this.setState({ field_missing: true });\n      this.setState({ clicked_create: false });\n    } else {\n      this.setState({ field_missing: false });\n      console.log(update_dep_data);\n      console.log(new_dep_data);\n      UserService.createDepartment({\n        data: new_dep_data,\n      }).then(\n        () => {\n          if (update_dep_data.length === 0) {\n            this.setState({ clicked_create: false });\n            window.location.replace(\"/mod/roles\");\n          } else {\n            UserService.updateDepartment({\n              data: update_dep_data,\n            }).then(\n              () => {\n                this.setState({ clicked_create: false });\n                window.location.replace(\"/mod/roles\");\n              },\n              (error) => {\n                this.setState({ clicked_create: false });\n                this.setState({ error: true });\n              }\n            );\n          }\n        },\n        (error) => {\n          this.setState({ clicked_create: false });\n          this.setState({ error: true });\n        }\n      );\n    }\n  }\n\n  handleDelete(e, id) {\n    e.preventDefault();\n    let new_deps = this.state.new_departments;\n\n    delete new_deps[id];\n\n    this.setState({ new_departments: new_deps });\n  }\n\n  handleAdd(e) {\n    e.preventDefault();\n\n    let new_deps = this.state.new_departments;\n    const count = this.state.counter;\n\n    new_deps[count] = {\n      name: \"\",\n    };\n\n    console.log(new_deps);\n\n    this.setState({ new_departments: new_deps });\n    this.setState({ counter: count + 1 });\n  }\n\n  render() {\n    return (\n      <div className=\"container-form mt-5\">\n        <form\n          className=\"card bg-light bg-gradient\"\n          onSubmit={this.handleCreate}\n        >\n          <div className=\"card-header\">\n            <div className=\"card-title\">\n              <h2 className=\"text-center\">Manage Departments</h2>\n            </div>\n          </div>\n          <div className=\"card-body text-center align-items-center mb-2\">\n            {Object.keys(this.state.departments).map((dep) => {\n              return (\n                <div\n                  key={\"div_\" + dep}\n                  className=\"row m-1 form-text text-center align-items-center\"\n                >\n                  <div\n                    key={\"div2_\" + dep}\n                    className=\"form-floating col-5 mb-1 ps-1\"\n                  >\n                    <input\n                      key={\"input_\" + dep}\n                      className=\"form-control\"\n                      type=\"text\"\n                      value={this.state.departments[dep].name}\n                      onChange={(e) => this.handleUpdatedChange(e, dep)}\n                      placeholder=\"Field Name\"\n                      id={\"inputFieldName\" + dep}\n                    />\n                    <label\n                      key={\"label_\" + dep}\n                      htmlFor={\"inputFieldName\" + dep}\n                    >\n                      Name\n                    </label>\n                  </div>\n                </div>\n              );\n            })}\n\n            {Object.keys(this.state.new_departments).map((dep) => {\n              return (\n                <div\n                  key={\"div_\" + dep}\n                  className=\"row m-1 form-text text-center align-items-center\"\n                >\n                  <div\n                    key={\"div2_\" + dep}\n                    className=\"form-floating col-5 mb-1 ps-1\"\n                  >\n                    <input\n                      key={\"input_\" + dep}\n                      className=\"form-control\"\n                      type=\"text\"\n                      value={this.state.new_departments[dep].name}\n                      onChange={(e) => this.handleNewChange(e, dep)}\n                      placeholder=\"Field Name\"\n                      id={\"inputFieldName\" + dep}\n                    />\n                    <label\n                      key={\"label_\" + dep}\n                      htmlFor={\"inputFieldName\" + dep}\n                    >\n                      Name\n                    </label>\n                  </div>\n                  <div key={\"div3_\" + dep} className=\"col-2\">\n                    <button\n                      key={\"button_\" + dep}\n                      className=\"btn btn-outline-danger btn-sm\"\n                      onClick={(e) => this.handleDelete(e, dep)}\n                    >\n                      x\n                    </button>\n                  </div>\n                </div>\n              );\n            })}\n            <div className=\"mb-3 row text-center\">\n              <div className=\"col-12\">\n                <button\n                  className=\"btn btn-outline-success btn-sm\"\n                  onClick={this.handleAdd}\n                >\n                  + Add Department\n                </button>\n              </div>\n            </div>\n            {this.state.error ? (\n              <strong className=\"text-danger mt-2\">\n                Error submitting request. Check connection.\n              </strong>\n            ) : (\n              \"\"\n            )}\n            {this.state.field_missing ? (\n              <strong className=\"text-danger\">Name field is required.</strong>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"card-footer text-end\">\n            {this.state.clicked_create ? (\n              <button className=\"btn btn-primary\" type=\"button\" disabled>\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </button>\n            ) : (\n              <button className=\"btn btn-outline-primary\">Update</button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default DepartmentCreate;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport UserService from \"../../services/user.service\";\n\nfunction RoleDetails(props) {\n  const location = useLocation();\n  const { role } = location.state;\n  const [departments, setDepartments] = useState([]);\n\n  const [description, setDescription] = useState(\"\");\n  const [name, setName] = useState(\"\");\n  const [level, setLevel] = useState(\"\");\n  const [department, setDepartment] = useState(\"\");\n\n  const [clicked_create, setClickedCreate] = useState(false);\n  const [error, setError] = useState(false);\n  const [missingField, setMissingField] = useState(false);\n\n  useEffect(() => {\n    UserService.getDepartments().then((res) => {\n      if (res.data) {\n        setDepartments(res.data);\n      }\n    });\n    setDescription(role.description);\n    setName(role.name);\n    setDepartment(role.department);\n    setLevel(role.level);\n  }, []);\n\n  let handleUpdate = (e) => {\n    e.preventDefault();\n    setClickedCreate(true);\n\n    if (level === \"\" && name == \"\") {\n      setError(false);\n      setClickedCreate(false);\n      setMissingField(true);\n    } else {\n      setMissingField(false);\n\n      const body = {\n        id: role._id,\n        description: description,\n        level: level,\n        name: name,\n        department: department,\n      };\n\n      UserService.updateRole(body).then(\n        () => {\n          window.location.replace(\"/mod/roles\");\n        },\n        (error) => {\n          setClickedCreate(false);\n          setError(true);\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"container container-form d-flex align-items-center justify-content-center mt-5\">\n      <form className=\"card bg-light bg-gradient\" onSubmit={handleUpdate}>\n        <div className=\"card-header\">\n          <div className=\"card-title\">\n            <h2 className=\"text-center\">{role.description} - Role Details</h2>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Type:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Description:</label>\n            <div className=\"col-sm-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={description}\n                onChange={(e) => {\n                  setDescription(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <div className=\"mb-3 row\">\n            <label className=\"col-sm-4 col-form-label\">Department:</label>\n            <div className=\"col-sm-8\">\n              <select\n                type=\"text\"\n                className=\"form-select\"\n                value={department}\n                onChange={(e) => {\n                  setDepartment(e.target.value);\n                }}\n              >\n                <option value=\"\">none</option>\n                {departments.map((dep) => {\n                  return <option value={dep._id}>{dep.name}</option>;\n                })}\n              </select>\n            </div>\n          </div>\n          {role.name === \"mod\" ? (\n            \"\"\n          ) : (\n            <div className=\"mb-3 row\">\n              <label className=\"col-sm-4 col-form-label\">Access Level:</label>\n              <div className=\"col-sm-8\">\n                <select\n                  type=\"text\"\n                  className=\"form-select\"\n                  value={level}\n                  onChange={(e) => {\n                    setLevel(e.target.value);\n                  }}\n                >\n                  <option value=\"0\">level 0 -- only view</option>\n                  <option value=\"1\">level 1 -- only department requests</option>\n                  <option value=\"2\">\n                    level 2 -- view/approve all requests\n                  </option>\n                  <option value=\"3\">\n                    level 3 -- view/approve all requests\n                  </option>\n                </select>\n              </div>\n            </div>\n          )}\n\n          {error ? (\n            <strong className=\"text-danger mt-2\">\n              Error submitting request. Check connection.\n            </strong>\n          ) : (\n            \"\"\n          )}\n          {missingField ? (\n            <strong className=\"text-danger\">\n              Name and Access level is required.\n            </strong>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"row\">\n            <div className=\"col-12 text-end\">\n              {clicked_create ? (\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span\n                    class=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  Loading...\n                </button>\n              ) : (\n                <button className=\"btn btn-outline-primary\">Update</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nexport default RoleDetails;\n","import React, { useEffect, useState } from \"react\";\n\nimport { Link } from \"react-router-dom\";\nimport UserService from \"../../services/user.service\";\nimport Loading from \"../Loading\";\nimport Moment from \"moment\";\n\nfunction ManageForms(props) {\n  const [forms, setForms] = useState([]);\n\n  useEffect(() => {\n    UserService.getForms().then((res) => {\n      if (res.data) {\n        setForms(res.data);\n      }\n    });\n  }, []);\n\n  return (\n    <div className=\"mt-2\">\n      <div className=\"row mb-3\">\n        <div className=\"col-12 text-light\">\n          <h4>Manage Forms</h4>\n        </div>\n        <div className=\"col-4\">\n          <Link to=\"/mod/forms/create\" className=\"btn btn-outline-light\">\n            + Add form\n          </Link>\n        </div>\n      </div>\n      <FormsList forms={forms} />\n    </div>\n  );\n}\n\nfunction FormsList(props) {\n  if (props.forms) {\n    return props.forms.length !== 0 ? (\n      <div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.forms\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return (\n                <Link\n                  to={{\n                    pathname: \"/mod/form/details\",\n                    state: { form: data },\n                  }}\n                  className=\"list-group-item list-group-item-action\"\n                  key={\"Link_\" + data._id}\n                >\n                  <div\n                    className=\"d-flex w-100 justify-content-between\"\n                    key={\"div_\" + data._id}\n                  ></div>\n                  <h5>Form Title: {data.name}</h5>\n                  <p className=\"mb-2\">\n                    Date Created:{\" \"}\n                    {Moment(data.date_created).format(\"DD/MM/YYYY - h:mm A\")}\n                  </p>\n                  <p className=\"mb-2\">\n                    Final Approvers:{\" \"}\n                    {data.finals.map((app) => {\n                      return app.firstname + \". \";\n                    })}\n                  </p>\n                  {data.finals.map((app) => {})}\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No forms to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nexport default ManageForms;\n","import React, { useEffect, useState } from \"react\";\n\nimport { useLocation } from \"react-router-dom\";\nimport UserService from \"../../services/user.service\";\n\nfunction FormDetails(props) {\n  const location = useLocation();\n  const { form } = location.state;\n\n  const [fieldTypes, setFieldTypes] = useState([]);\n\n  const [name, setName] = useState(\"\");\n  const [fields, setFields] = useState({});\n\n  const [clicked_create, setClickedCreate] = useState(false);\n  const [error, setError] = useState(false);\n  const [missingField, setMissingField] = useState(false);\n\n  const [level_one, setLevelOne] = useState(1);\n  const [level_two, setLevelTwo] = useState(2);\n  const [level_three, setLevelThree] = useState(3);\n\n  const [final_approvers, setFinalApprovers] = useState({});\n  const [list_of_approvers, setListOfApprovers] = useState([]);\n\n  useEffect(() => {\n    UserService.getFieldTypes().then((res) => {\n      if (res.data) {\n        setFieldTypes(res.data);\n      }\n    });\n    let new_fields = {};\n    for (let field of form.fields) {\n      new_fields[field._id] = field;\n    }\n    form.stages[1].map((s) => {\n      if (s === 1) {\n        setLevelOne(1);\n      }\n      if (s === 2) {\n        setLevelTwo(1);\n      }\n      if (s == 3) {\n        setLevelThree(1);\n      }\n    });\n    form.stages[2].map((s) => {\n      if (s === 1) {\n        setLevelOne(2);\n      }\n      if (s === 2) {\n        setLevelTwo(2);\n      }\n      if (s == 3) {\n        setLevelThree(2);\n      }\n    });\n    form.stages[3].map((s) => {\n      if (s === 1) {\n        setLevelOne(3);\n      }\n      if (s === 2) {\n        setLevelTwo(3);\n      }\n      if (s == 3) {\n        setLevelThree(3);\n      }\n    });\n\n    UserService.getApprovers().then((resp) => {\n      if (resp.data) {\n        let approvers = {};\n\n        resp.data.map((approver) => {\n          approvers[approver._id] = false;\n        });\n\n        form.finals.map((f) => {\n          approvers[f._id] = true;\n        });\n\n        setFinalApprovers(approvers);\n        setListOfApprovers(resp.data);\n      }\n    });\n\n    setFields(new_fields);\n    setName(form.name);\n  }, []);\n\n  let handleFieldTypeChange = (e, field_id) => {\n    let current_fields = fields;\n    current_fields[field_id].type = e.target.value;\n    setFields({ ...fields });\n  };\n\n  let handleFieldNameChange = (e, field_id) => {\n    let current_fields = fields;\n    current_fields[field_id].name = e.target.value;\n    setFields({ ...fields });\n  };\n\n  let handleDelete = (e, field_id) => {\n    e.preventDefault();\n    let current_fields = fields;\n\n    delete current_fields[field_id];\n\n    setFields({ ...fields });\n  };\n\n  let handleAdd = (e) => {\n    e.preventDefault();\n    let current_fields = fields;\n\n    const new_field = {\n      name: \"\",\n      required: false,\n      type: \"\",\n    };\n\n    setFields({ ...fields, new_field });\n  };\n\n  let handleRequiredChange = (e, field_id) => {\n    let current_fields = fields;\n    const value = !current_fields[field_id].required;\n    current_fields[field_id].required = value;\n    setFields({ ...fields });\n  };\n\n  let handleUpdate = (e) => {\n    e.preventDefault();\n    setClickedCreate(true);\n\n    let fields_array = [];\n    let fields_error = false;\n\n    Object.keys(fields).map((f) => {\n      if (fields[f].name === \"\" || fields[f].type === \"\") {\n        console.log(\"found error!\");\n        fields_error = true;\n      }\n      fields_array.push(fields[f]);\n    });\n\n    if (name === \"\" || fields_error) {\n      setError(false);\n      setClickedCreate(false);\n      setMissingField(true);\n    } else {\n      setMissingField(false);\n\n      let stages = { 1: [], 2: [], 3: [] };\n\n      stages[level_one].push(1);\n      stages[level_two].push(2);\n      stages[level_three].push(3);\n\n      const body = {\n        id: form._id,\n        name: name,\n        fields: fields_array,\n        stages: stages,\n      };\n\n      UserService.updateForm(body).then(\n        () => {\n          window.location.replace(\"/mod/forms\");\n        },\n        (error) => {\n          setClickedCreate(false);\n          setError(true);\n        }\n      );\n    }\n  };\n\n  let handleAddFinalApprover = (e, id) => {\n    let current_approvers = final_approvers;\n    console.log(current_approvers);\n    const value = !current_approvers[id];\n    current_approvers[id] = value;\n    console.log(current_approvers);\n    setFinalApprovers(current_approvers);\n  };\n\n  return (\n    <div className=\"container container-form d-flex align-items-center justify-content-center mt-5\">\n      <form\n        className=\"container-form card bg-light bg-gradient\"\n        onSubmit={handleUpdate}\n        autoComplete=\"off\"\n      >\n        <div className=\"card-header\">\n          <div className=\"card-title\">\n            <h2 className=\"text-center\">{form.name} - Form Details</h2>\n          </div>\n        </div>\n        <div className=\"card-body\">\n          <div className=\"mb-3 row\">\n            <div className=\"col-4 m-auto\">\n              <strong>Name:</strong>\n            </div>\n\n            <div className=\"col-8\">\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                value={name}\n                onChange={(e) => {\n                  setName(e.target.value);\n                }}\n              />\n            </div>\n          </div>\n          <FormFieldsEdit\n            fields={fields}\n            fieldTypes={fieldTypes}\n            handleFieldTypeChange={handleFieldTypeChange}\n            handleFieldNameChange={handleFieldNameChange}\n            handleRequiredChange={handleRequiredChange}\n            handleDelete={handleDelete}\n          />\n          <div className=\"mb-3 row text-center\">\n            <div className=\"col-12\">\n              <button\n                className=\"btn btn-outline-success btn-sm\"\n                onClick={handleAdd}\n              >\n                + Add Field\n              </button>\n            </div>\n          </div>\n\n          <div className=\"mb-3 row\">\n            <strong className=\"col-5 \">Select stages of approval:</strong>\n            <div className=\"mb-3 row text-center m-1\">\n              <div className=\"col-6 text-start mb-2\">\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                  Level 1 - view/approve department only\n                </label>\n                <select\n                  value={level_one}\n                  className=\"form-select\"\n                  onChange={(e) => {\n                    setLevelOne(e.target.value);\n                  }}\n                >\n                  <option selected value=\"1\">\n                    First Stage\n                  </option>\n                  <option value=\"2\">Second Stage</option>\n                  <option value=\"3\">Third Stage</option>\n                </select>\n              </div>\n              <div className=\"col-6 text-start mb-2\">\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                  Level 2 - view/approve all\n                </label>\n                <select\n                  value={level_two}\n                  className=\"form-select\"\n                  onChange={(e) => {\n                    setLevelTwo(e.target.value);\n                  }}\n                >\n                  <option value=\"1\">First Stage</option>\n                  <option value=\"2\">Second Stage</option>\n                  <option value=\"3\">Third Stage</option>\n                </select>\n              </div>\n              <div className=\"col-6 text-start\">\n                <label className=\"form-check-label\" htmlFor=\"flexCheckDefault\">\n                  Level 3 - view/approve all\n                </label>\n                <select\n                  value={level_three}\n                  className=\"form-select\"\n                  onChange={(e) => {\n                    setLevelThree(e.target.value);\n                  }}\n                >\n                  <option value=\"1\">First Stage</option>\n                  <option value=\"2\">Second Stage</option>\n                  <option value=\"3\">Third Stage</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          {error ? (\n            <strong className=\"text-danger mt-2\">\n              Error submitting request. Check connection.\n            </strong>\n          ) : (\n            \"\"\n          )}\n          {missingField ? (\n            <strong className=\"text-danger\">\n              Form name, field names and types are required fields.\n            </strong>\n          ) : (\n            \"\"\n          )}\n        </div>\n        <div className=\"card-footer\">\n          <div className=\"row\">\n            <div className=\"col-12 text-end\">\n              {clicked_create ? (\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span\n                    className=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  Loading...\n                </button>\n              ) : (\n                <button className=\"btn btn-outline-primary\">Update</button>\n              )}\n            </div>\n          </div>\n        </div>\n      </form>\n    </div>\n  );\n}\n\nfunction FormFieldsEdit(props) {\n  const [fields, setFields] = useState({});\n  // const [fieldChecked, setFieldChecked] = useState({});\n\n  useEffect(() => {\n    setFields(props.fields);\n  }, [props.fields]);\n\n  return (\n    <div className=\"mb-3 row\">\n      <div className=\"col-12 m-auto\">\n        <strong>Fields:</strong>\n      </div>\n\n      {Object.keys(fields).map((id) => {\n        return (\n          <div className=\"row m-1 form-text\">\n            <div className=\"form-floating col-5 mb-1 ps-1\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={fields[id].name}\n                onChange={(e) => props.handleFieldNameChange(e, id)}\n                placeholder=\"Field Name\"\n                id=\"inputFieldName\"\n              />\n              <label htmlFor=\"inputFieldName\">Field Name</label>\n            </div>\n            <div className=\"form-floating col-3 mb-1 ps-1\">\n              <select\n                className=\"form-select\"\n                type=\"text\"\n                value={fields[id].type}\n                onChange={(e) => props.handleFieldTypeChange(e, id)}\n                id=\"selectFieldTypes\"\n              >\n                <option value=\"\"></option>\n                {props.fieldTypes.map((field_type) => {\n                  return (\n                    <option key={field_type._id} value={field_type._id}>\n                      {\" \"}\n                      {field_type.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <label htmlFor=\"selectFieldTypes\">Field Type</label>\n            </div>\n            <div className=\"form-check form-switch col-2 m-auto\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n                name={id}\n                checked={fields[id].required}\n                onChange={(e) => {\n                  props.handleRequiredChange(e, id);\n                }}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Required\n              </label>\n            </div>\n            <div className=\"col-2 m-auto text-end\">\n              <button\n                className=\"btn btn-outline-danger btn-sm\"\n                onClick={(e) => props.handleDelete(e, id)}\n              >\n                x\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FormDetails;\n","import React, { Component, useEffect, useState } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nclass FormCreate extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      name: \"\",\n      clicked_create: false,\n      error: false,\n      field_missing: false,\n      fields: {},\n      fieldTypes: [],\n      final_approvers: {},\n      list_of_approvers: [],\n      counter: 0,\n      counter_viewer: 0,\n      level_one: 1,\n      level_two: 2,\n      level_three: 3,\n      viewer_fields: {},\n      fieldViewerTypes: [],\n    };\n\n    this.handleCreate = this.handleCreate.bind(this);\n\n    this.handleFieldTypeChange = this.handleFieldTypeChange.bind(this);\n    this.handleFieldNameChange = this.handleFieldNameChange.bind(this);\n    this.handleDelete = this.handleDelete.bind(this);\n    this.handleAdd = this.handleAdd.bind(this);\n\n    this.handleViewerFieldTypeChange =\n      this.handleViewerFieldTypeChange.bind(this);\n    this.handleViewerFieldNameChange =\n      this.handleViewerFieldNameChange.bind(this);\n    this.handleViewerFieldDelete = this.handleViewerFieldDelete.bind(this);\n    this.handleViewerAdd = this.handleViewerAdd.bind(this);\n\n    this.handleAddFinalApprover = this.handleAddFinalApprover.bind(this);\n  }\n\n  componentDidMount() {\n    UserService.getFieldTypes().then((res) => {\n      if (res.data) {\n        console.log(res.data);\n        this.setState({ fieldTypes: res.data });\n      }\n    });\n\n    UserService.getFieldViewerTypes().then((res) => {\n      if (res.data) {\n        console.log(res.data);\n        this.setState({ fieldViewerTypes: res.data });\n      }\n    });\n\n    UserService.getApprovers().then((resp) => {\n      if (resp.data) {\n        let approvers = {};\n\n        resp.data.map((approver) => {\n          approvers[approver._id] = false;\n        });\n\n        this.setState({ final_approvers: approvers });\n        this.setState({ list_of_approvers: resp.data });\n      }\n    });\n  }\n\n  handleFieldTypeChange = (e, field_id) => {\n    let current_fields = this.state.fields;\n    current_fields[field_id].type = e.target.value;\n    this.setState({ fields: current_fields });\n    // setFields({ ...fields });\n  };\n\n  handleFieldNameChange = (e, field_id) => {\n    let current_fields = this.state.fields;\n    current_fields[field_id].name = e.target.value;\n    this.setState({ fields: current_fields });\n    // setFields({ ...fields });\n  };\n\n  handleDelete = (e, field_id) => {\n    e.preventDefault();\n    let current_fields = this.state.fields;\n    const count = this.state.counter;\n\n    delete current_fields[field_id];\n\n    this.setState({ fields: current_fields });\n    this.setState({ counter: count - 1 });\n    // setFields({ ...fields });\n  };\n\n  handleAdd = (e) => {\n    e.preventDefault();\n    let current_fields = this.state.fields;\n    const count = this.state.counter;\n\n    current_fields[count] = {\n      name: \"\",\n      required: false,\n      type: \"\",\n    };\n\n    console.log(current_fields);\n\n    this.setState({ fields: current_fields });\n    this.setState({ counter: count + 1 });\n    // setFields({ ...fields, new_field });\n  };\n\n  handleViewerFieldTypeChange = (e, field_id) => {\n    let current_fields = this.state.viewer_fields;\n    current_fields[field_id].type = e.target.value;\n    this.setState({ viewer_fields: current_fields });\n    // setFields({ ...fields });\n  };\n\n  handleViewerFieldNameChange = (e, field_id) => {\n    let current_fields = this.state.viewer_fields;\n    current_fields[field_id].name = e.target.value;\n    this.setState({ viewer_fields: current_fields });\n    // setFields({ ...fields });\n  };\n\n  handleViewerFieldDelete = (e, field_id) => {\n    e.preventDefault();\n    let current_fields = this.state.viewer_fields;\n    const count = this.state.counter_viewer;\n\n    delete current_fields[field_id];\n\n    this.setState({ viewer_fields: current_fields });\n    this.setState({ counter_viewer: count - 1 });\n    // setFields({ ...fields });\n  };\n\n  handleViewerAdd = (e) => {\n    e.preventDefault();\n    let current_fields = this.state.viewer_fields;\n    const count = this.state.counter_viewer;\n\n    current_fields[count] = {\n      name: \"\",\n      type: \"\",\n    };\n\n    console.log(current_fields);\n\n    this.setState({ viewer_fields: current_fields });\n    this.setState({ counter_viewer: count + 1 });\n    // setFields({ ...fields, new_field });\n  };\n\n  handleRequiredChange = (e, field_id) => {\n    let current_fields = this.state.fields;\n    const value = !current_fields[field_id].required;\n    current_fields[field_id].required = value;\n    this.setState({ fields: current_fields });\n    // setFields({ ...fields });\n  };\n\n  handleAddFinalApprover = (e, id) => {\n    let current_approvers = this.state.final_approvers;\n    const value = !current_approvers[id];\n    current_approvers[id] = value;\n\n    this.setState({ final_approvers: current_approvers });\n  };\n\n  handleCreate(e) {\n    e.preventDefault();\n    this.setState({ clicked_create: true });\n\n    const nm = this.state.name;\n    const fields = this.state.fields;\n    const viewer_fields = this.state.viewer_fields;\n\n    let fields_array = [];\n    let fields_error = false;\n\n    Object.keys(fields).map((f) => {\n      if (fields[f].name === \"\" || fields[f].type === \"\") {\n        console.log(\"found error!\");\n        fields_error = true;\n      }\n      fields_array.push(fields[f]);\n    });\n\n    let viewer_fields_array = [];\n\n    Object.keys(viewer_fields).map((f) => {\n      if (viewer_fields[f].name === \"\" || viewer_fields[f].type === \"\") {\n        console.log(\"found error!\");\n        fields_error = true;\n      }\n      viewer_fields_array.push(viewer_fields[f]);\n    });\n\n    if (nm === \"\" || fields_error) {\n      this.setState({ field_missing: true });\n      this.setState({ clicked_create: false });\n    } else {\n      this.setState({ field_missing: false });\n\n      const final_approvers = this.state.final_approvers;\n      let approvers_array = [];\n      Object.keys(final_approvers).map((app) => {\n        if (final_approvers[app]) {\n          approvers_array.push(app);\n        }\n      });\n\n      let stages = { 1: [], 2: [], 3: [] };\n\n      stages[this.state.level_one].push(1);\n      stages[this.state.level_two].push(2);\n      stages[this.state.level_three].push(3);\n\n      UserService.createForm({\n        name: nm,\n        fields: fields_array,\n        finals: approvers_array,\n        stages: stages,\n        viewer_fields: viewer_fields_array,\n      }).then(\n        () => {\n          this.setState({ clicked_create: false });\n          window.location.replace(\"/mod/forms\");\n        },\n        (error) => {\n          this.setState({ clicked_create: false });\n          this.setState({ error: true });\n        }\n      );\n\n      //   UserService.createDepartment({\n      //     name: nm,\n      //   }).then(\n      //     () => {\n      //       this.setState({ clicked_create: false });\n      //       window.location.replace(\"/mod/roles\");\n      //     },\n      //     (error) => {\n      //       this.setState({ clicked_create: false });\n      //       this.setState({ error: true });\n      //     }\n      //   );\n      // }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"container-form mt-5\">\n        <form\n          className=\"card bg-light bg-gradient\"\n          onSubmit={this.handleCreate}\n          autoComplete=\"off\"\n        >\n          <div className=\"card-header\">\n            <div className=\"card-title\">\n              <h2 className=\"text-center\">Create Form</h2>\n            </div>\n          </div>\n          <div className=\"card-body\">\n            <div className=\"mb-3 row\">\n              <div className=\"col-3 m-auto\">\n                <strong>Form Title:</strong>\n              </div>\n\n              <div className=\"col-9 m-auto\">\n                <input\n                  type=\"text\"\n                  className=\"form-control\"\n                  onChange={(e) => {\n                    this.setState({ name: e.target.value });\n                  }}\n                />\n              </div>\n            </div>\n\n            <FormFieldsEdit\n              fields={this.state.fields}\n              fieldTypes={this.state.fieldTypes}\n              handleFieldTypeChange={this.handleFieldTypeChange}\n              handleFieldNameChange={this.handleFieldNameChange}\n              handleRequiredChange={this.handleRequiredChange}\n              handleDelete={this.handleDelete}\n            />\n            <div className=\"mb-3 row text-center\">\n              <div className=\"col-12\">\n                <button\n                  className=\"btn btn-outline-success btn-sm\"\n                  onClick={this.handleAdd}\n                >\n                  + Add Field\n                </button>\n              </div>\n            </div>\n\n            <div className=\"mb-3 row\">\n              <strong className=\"col-5 \">Select stages of approval:</strong>\n              <div className=\"mb-3 row text-center m-1\">\n                <div className=\"col-6 text-start mb-2\">\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexCheckDefault\"\n                  >\n                    Level 1 - view/approve only department\n                  </label>\n                  <select\n                    value={this.state.level_one}\n                    className=\"form-select\"\n                    onChange={(e) => {\n                      this.setState({ level_one: e.target.value });\n                    }}\n                  >\n                    <option selected value=\"1\">\n                      First Stage\n                    </option>\n                    <option value=\"2\">Second Stage</option>\n                    <option value=\"3\">Third Stage</option>\n                  </select>\n                </div>\n                <div className=\"col-6 text-start mb-2\">\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexCheckDefault\"\n                  >\n                    Level 2 - view/approve all\n                  </label>\n                  <select\n                    value={this.state.level_two}\n                    className=\"form-select\"\n                    onChange={(e) => {\n                      this.setState({ level_two: e.target.value });\n                    }}\n                  >\n                    <option value=\"1\">First Stage</option>\n                    <option value=\"2\">Second Stage</option>\n                    <option value=\"3\">Third Stage</option>\n                  </select>\n                </div>\n                <div className=\"col-6 text-start\">\n                  <label\n                    className=\"form-check-label\"\n                    htmlFor=\"flexCheckDefault\"\n                  >\n                    Level 3 - view/approve all\n                  </label>\n                  <select\n                    value={this.state.level_three}\n                    className=\"form-select\"\n                    onChange={(e) => {\n                      this.setState({ level_three: e.target.value });\n                    }}\n                  >\n                    <option value=\"1\">First Stage</option>\n                    <option value=\"2\">Second Stage</option>\n                    <option value=\"3\">Third Stage</option>\n                  </select>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"mb-3 row m-auto\">\n              <strong className=\"col-12 \">Select final approvers:</strong>\n\n              {this.state.list_of_approvers.map((app) => {\n                return (\n                  <div className=\"form-check m-1\" key={app._id}>\n                    <input\n                      key={\"input_\" + app._id}\n                      className=\"form-check-input\"\n                      type=\"checkbox\"\n                      checked={this.state.final_approvers[app._id]}\n                      id={\"flexCheckDefault\" + app._id}\n                      onChange={(e) => this.handleAddFinalApprover(e, app._id)}\n                    />\n                    <label\n                      key={\"label_\" + app._id}\n                      className=\"form-check-label\"\n                      htmlFor={\"flexCheckDefault\" + app._id}\n                    >\n                      {app.firstname +\n                        \" \" +\n                        app.lastname +\n                        \" - \" +\n                        app.role.description}\n                    </label>\n                  </div>\n                );\n              })}\n            </div>\n\n            <div className=\"mb-3 row m-auto\">\n              <strong className=\"col-12 \">Viewer Fields:</strong>\n              {Object.keys(this.state.viewer_fields).map((id) => {\n                return (\n                  <div className=\"row m-1 form-text\">\n                    <div className=\"form-floating col-5 mb-1 ps-1\">\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        value={this.state.viewer_fields[id].name}\n                        onChange={(e) =>\n                          this.handleViewerFieldNameChange(e, id)\n                        }\n                        placeholder=\"Field Name\"\n                        id=\"inputFieldName\"\n                      />\n                      <label htmlFor=\"inputFieldName\">Field Name</label>\n                    </div>\n                    <div className=\"form-floating col-3 mb-1 ps-1\">\n                      <select\n                        className=\"form-select\"\n                        type=\"text\"\n                        value={this.state.viewer_fields[id].type}\n                        onChange={(e) =>\n                          this.handleViewerFieldTypeChange(e, id)\n                        }\n                        id=\"selectFieldTypes\"\n                      >\n                        <option value=\"\"></option>\n                        {this.state.fieldViewerTypes.map((field_type) => {\n                          return (\n                            <option key={field_type._id} value={field_type._id}>\n                              {\" \"}\n                              {field_type.name}\n                            </option>\n                          );\n                        })}\n                      </select>\n                      <label htmlFor=\"selectFieldTypes\">Field Type</label>\n                    </div>\n                    <div className=\"col-2 m-auto text-end\">\n                      <button\n                        className=\"btn btn-outline-danger btn-sm\"\n                        onClick={(e) => this.handleViewerFieldDelete(e, id)}\n                      >\n                        x\n                      </button>\n                    </div>\n                  </div>\n                );\n              })}\n              <div className=\"mb-3 row text-center\">\n                <div className=\"col-12\">\n                  <button\n                    className=\"btn btn-outline-success btn-sm\"\n                    onClick={this.handleViewerAdd}\n                  >\n                    + Add Field\n                  </button>\n                </div>\n              </div>\n            </div>\n\n            {this.state.error ? (\n              <strong className=\"text-danger mt-2\">\n                Error submitting request. Check connection.\n              </strong>\n            ) : (\n              \"\"\n            )}\n            {this.state.field_missing ? (\n              <strong className=\"text-danger\">\n                Form Title field is required.\n              </strong>\n            ) : (\n              \"\"\n            )}\n          </div>\n\n          <div className=\"card-footer text-end\">\n            {this.state.clicked_create ? (\n              <button className=\"btn btn-primary\" type=\"button\" disabled>\n                <span\n                  className=\"spinner-border spinner-border-sm\"\n                  role=\"status\"\n                  aria-hidden=\"true\"\n                ></span>\n                Loading...\n              </button>\n            ) : (\n              <button className=\"btn btn-outline-primary\">Create</button>\n            )}\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nfunction FormFieldsEdit(props) {\n  const [fields, setFields] = useState({});\n  // const [fieldChecked, setFieldChecked] = useState({});\n\n  useEffect(() => {\n    setFields(props.fields);\n  }, [props.fields]);\n\n  return (\n    <div className=\"mb-3 row\">\n      <div className=\"col-12 m-auto mb-2\">\n        <strong>Fields:</strong>\n      </div>\n\n      <div className=\"row m-1 form-text\">\n        <div className=\"form-floating col-5 mb-1 ps-1\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value=\"Employee Name\"\n            placeholder=\"Field Name\"\n            id=\"inputFieldName\"\n            disabled\n          />\n          <label htmlFor=\"inputFieldName\">Field Name</label>\n        </div>\n        <div className=\"form-floating col-3 mb-1 ps-1\">\n          <select\n            className=\"form-select\"\n            type=\"text\"\n            id=\"selectFieldTypes\"\n            disabled\n          >\n            <option selected>Text</option>\n          </select>\n          <label htmlFor=\"selectFieldTypes\">Field Type</label>\n        </div>\n        <div className=\"form-check form-switch col-2 m-auto\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"flexSwitchCheckDefault\"\n            checked={true}\n            disabled\n          />\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n            Required\n          </label>\n        </div>\n      </div>\n      <div className=\"row m-1 form-text\">\n        <div className=\"form-floating col-5 mb-1 ps-1\">\n          <input\n            className=\"form-control\"\n            type=\"text\"\n            value=\"Department\"\n            placeholder=\"Field Name\"\n            id=\"inputFieldName\"\n            disabled\n          />\n          <label htmlFor=\"inputFieldName\">Field Name</label>\n        </div>\n        <div className=\"form-floating col-3 mb-1 ps-1\">\n          <select\n            className=\"form-select\"\n            type=\"text\"\n            id=\"selectFieldTypes\"\n            disabled\n          >\n            <option selected>Dropdown</option>\n          </select>\n          <label htmlFor=\"selectFieldTypes\">Field Type</label>\n        </div>\n        <div className=\"form-check form-switch col-2 m-auto\">\n          <input\n            className=\"form-check-input\"\n            type=\"checkbox\"\n            id=\"flexSwitchCheckDefault\"\n            checked={true}\n            disabled\n          />\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">\n            Required\n          </label>\n        </div>\n      </div>\n      {Object.keys(fields).map((id) => {\n        return (\n          <div className=\"row m-1 form-text\">\n            <div className=\"form-floating col-5 mb-1 ps-1\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                value={fields[id].name}\n                onChange={(e) => props.handleFieldNameChange(e, id)}\n                placeholder=\"Field Name\"\n                id=\"inputFieldName\"\n              />\n              <label htmlFor=\"inputFieldName\">Field Name</label>\n            </div>\n            <div className=\"form-floating col-3 mb-1 ps-1\">\n              <select\n                className=\"form-select\"\n                type=\"text\"\n                value={fields[id].type}\n                onChange={(e) => props.handleFieldTypeChange(e, id)}\n                id=\"selectFieldTypes\"\n              >\n                <option value=\"\"></option>\n                {props.fieldTypes.map((field_type) => {\n                  return (\n                    <option key={field_type._id} value={field_type._id}>\n                      {\" \"}\n                      {field_type.name}\n                    </option>\n                  );\n                })}\n              </select>\n              <label htmlFor=\"selectFieldTypes\">Field Type</label>\n            </div>\n            <div className=\"form-check form-switch col-2 m-auto\">\n              <input\n                className=\"form-check-input\"\n                type=\"checkbox\"\n                id=\"flexSwitchCheckDefault\"\n                name={id}\n                checked={fields[id].required}\n                onChange={(e) => {\n                  props.handleRequiredChange(e, id);\n                }}\n              />\n              <label\n                className=\"form-check-label\"\n                htmlFor=\"flexSwitchCheckDefault\"\n              >\n                Required\n              </label>\n            </div>\n            <div className=\"col-2 m-auto text-end\">\n              <button\n                className=\"btn btn-outline-danger btn-sm\"\n                onClick={(e) => props.handleDelete(e, id)}\n              >\n                x\n              </button>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default FormCreate;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\n\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nimport \"../App.css\";\nimport Loading from \"./Loading\";\nimport { ExportToExcel } from \"./ExportToExcel\";\nimport Moment from \"moment\";\nimport DateTimePicker from \"react-datetime-picker\";\n\nclass Dashboard extends Component {\n  constructor(props) {\n    super(props);\n\n    const mDate = new Date();\n    mDate.setHours(0, 0, 0, 0);\n\n    this.state = {\n      dbRequests: [],\n      showDate: mDate,\n      fromDate: new Date(),\n      toDate: new Date(),\n      loading: true,\n      error: false,\n    };\n\n    this.handleShowAll = this.handleShowAll.bind(this);\n    this.handleDateChange = this.handleDateChange.bind(this);\n  }\n\n  componentDidMount() {\n    const mDate = this.state.showDate;\n    mDate.setHours(0, 0, 0, 0);\n\n    const today = new Date();\n    today.setDate(today.getDate() + 1);\n\n    this.getRequests();\n  }\n\n  getRequests() {\n    this.setState({ error: false });\n    this.setState({ loading: true });\n\n    const mDate = this.state.showDate;\n    // mDate.setHours(0, 0, 0, 0);\n\n    // const today = new Date();\n    // today.setDate(today.getDate() + 1);\n    const to = this.state.toDate;\n\n    UserService.getDateRequests({\n      min_date: mDate,\n      max_date: to,\n    })\n      .then((res) => {\n        if (res.data) {\n          this.setState({ dbRequests: res.data });\n          this.setState({ loading: false });\n        }\n      })\n      .catch(() => {\n        this.setState({ error: true });\n      });\n  }\n\n  handleShowAll() {\n    this.setState({ showAll: !this.state.showAll });\n  }\n\n  handleDateChange(from) {\n    // switch (e.target.value) {\n    //   case \"0\":\n    //     this.setState({ showDate: new Date() }, () => {\n    //       this.getRequests();\n    //     });\n    //     break;\n    //   case \"1\":\n    //     const date = new Date();\n    //     const month = new Date(date.getFullYear(), date.getMonth(), 1);\n    //     this.setState({ showDate: month }, () => {\n    //       this.getRequests();\n    //     });\n    //     break;\n    //   case \"2\":\n    //     const new_date = new Date(1900, 1, 1);\n    //     this.setState({ showDate: new_date }, () => {\n    //       this.getRequests();\n    //     });\n    //     break;\n    // }\n    this.getRequests();\n  }\n\n  render() {\n    const { dbRequests } = this.state;\n\n    return (\n      <div>\n        <div className=\"container-fluid\">\n          <nav className=\"row navbar justify-content-center text-end pt-4\">\n            <div className=\"col-sm-6 col-md-5 col-lg-3 mb-2\">\n              <label className=\"form-label text-light h5 me-2\">From:</label>\n              <DateTimePicker\n                disableClock\n                maxDate={this.state.toDate}\n                value={this.state.showDate}\n                onChange={(val) => {\n                  val.setHours(0, 0, 0, 0);\n                  this.setState({ showDate: val });\n                }}\n                format=\"dd/MM/yyyy\"\n              />\n            </div>\n            <div className=\"col-sm-6 col-md-5 col-lg-3 mb-2\">\n              <label className=\"form-label text-light h5 me-2\">To:</label>\n              <DateTimePicker\n                disableClock\n                maxDate={new Date()}\n                value={this.state.toDate}\n                onChange={(val) => {\n                  val.setHours(23, 59, 59, 0);\n                  this.setState({ toDate: val });\n                }}\n                format=\"dd/MM/yyyy\"\n              />\n            </div>\n            <div className=\"col-2\">\n              <button\n                className=\"btn btn-outline-light\"\n                onClick={this.handleDateChange}\n              >\n                Show\n              </button>\n            </div>\n            {this.state.error ? (\n              <strong className=\"text-danger col mt-4\">\n                There was an error fetching requests. Check network connection\n                and refresh page.\n              </strong>\n            ) : (\n              \"\"\n            )}\n          </nav>\n        </div>\n        <div className=\" align-items-center mt-4\">\n          {this.state.loading ? (\n            <Loading />\n          ) : (\n            <ApprovalRequestsDisplay forms={dbRequests} />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction timeStamp(date1, date2) {\n  var val = 0;\n\n  let date_val = new Date(date1);\n\n  val = date2.getTime() - date_val.getTime();\n\n  return Math.floor(val / (1000 * 3600 * 24));\n}\n\nfunction ApprovalRequestsDisplay(props) {\n  if (props.forms) {\n    return (\n      <div className=\"row\">\n        {props.forms.map((form) => {\n          if (form.final_approval === 0) {\n          } else {\n            return (\n              <div className=\"col-sm-12 col-md-6 col-lg-6\">\n                <div className=\"card m-2\">\n                  <div className=\"card-body\">\n                    <h5 className=\"card-title\">\n                      Employee Name: {form.filled_by}\n                    </h5>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">\n                      Time Submitted:{\" \"}\n                      {Moment(form.date_submitted).format(\n                        \"DD/MM/YYYY - h:mm A\"\n                      )}\n                    </h6>\n                    <h6 className=\"card-subtitle mb-2 text-muted\">\n                      Time of Approval:{\" \"}\n                      {Moment(form.approval_date).format(\"DD/MM/YYYY - h:mm A\")}\n                    </h6>\n                    <p className=\"card-text text-muted\">\n                      Form Type: {form.form.name}\n                    </p>\n                    <div className=\"card-text\">\n                      {form.final_approval === 1 ? (\n                        <h4>\n                          <span className=\"badge rounded-pill mb-1 me-2 bg-success\">\n                            Approved\n                          </span>\n                        </h4>\n                      ) : (\n                        <h4>\n                          <span className=\"badge rounded-pill mb-1 me-2 bg-danger\">\n                            Not Approved\n                          </span>\n                        </h4>\n                      )}\n                    </div>\n\n                    <div className=\"card-text g-4\">\n                      {AuthService.getCurrentUser().role.level === 0 ? (\n                        <div className=\"row\">\n                          <hr className=\"m-0 mb-2 p-0\"></hr>\n                          <div className=\"col-auto\">\n                            <Link\n                              to={\"/viewform/\" + form._id}\n                              className=\"btn btn-primary btn-sm\"\n                            >\n                              view\n                            </Link>\n                          </div>\n                        </div>\n                      ) : (\n                        \"\"\n                      )}\n                    </div>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n      </div>\n    );\n  }\n}\n\nfunction createExcelData(forms) {\n  let return_data = [];\n\n  for (let f of forms) {\n    let app = [];\n    let dis = [];\n    for (let a of f.approval) {\n      if (a.status === 1) {\n        app.push(a.approver.firstname);\n      } else if (a.status === 2) {\n        dis.push(a.approver.firstname);\n      }\n    }\n\n    let obj = {\n      \"Filled By\": f.filled_by,\n      \"Form Type\": f.form.name,\n      \"Approved By\": \"\".concat(app),\n      \"Dissaproved By\": \"\".concat(dis),\n      \"Date Filled\": Moment(f.date_submitted).format(\"DD/MM/YYYY - h:mm A\"),\n    };\n\n    return_data.push(obj);\n  }\n\n  return return_data;\n}\n\nfunction getApprovalStatuses(approval) {\n  var approvals = [];\n\n  for (let app of approval) {\n    if (app.status === 1) {\n      // console.log(app.status);\n      approvals.push({\n        status: \"bg-success\",\n        message: app.approver.firstname + \" Approved\",\n      });\n    } else if (app.status === 2) {\n      // console.log(app.firstname);\n      approvals.push({\n        status: \"bg-danger\",\n        message: app.approver.firstname + \" Disapproved\",\n      });\n    }\n  }\n\n  if (approvals.length === 0) {\n    approvals.push({\n      status: \"bg-warning\",\n      message: \"Approval Pending\",\n    });\n  }\n\n  return approvals;\n}\n\nexport default Dashboard;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\n\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\n\nimport \"../App.css\";\nimport Loading from \"./Loading\";\nimport ManageUsers from \"./ManageUsers\";\nimport UserDetails from \"./UserDetails\";\nimport Signup from \"./Signup\";\nimport ManageRoles from \"./mod/ManageRoles\";\nimport RoleCreate from \"./mod/RoleCreate\";\nimport DepartmentCreate from \"./mod/DepartmentCreate\";\nimport RoleDetails from \"./mod/RoleDetails\";\nimport ManageForms from \"./mod/ManageForms\";\nimport FormDetails from \"./mod/FormDetails\";\nimport FormCreate from \"./mod/FormCreate\";\nimport Dashboard from \"./Dashboard\";\n\nclass Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: AuthService.getCurrentUser(),\n      dbRequests: [],\n      showAll: false,\n    };\n\n    this.handleShowAll = this.handleShowAll.bind(this);\n  }\n\n  componentDidMount() {\n    //    api\n    //      .get(\"/api/getapprovalrequests\")\n    //      .then((res) => {\n    //        if (res.data) {\n    //          this.setState({ dbRequests: res.data });\n    //        }\n    //      })\n    //      .catch();\n    UserService.getApprovalRequests()\n      .then((res) => {\n        if (res.data) {\n          let db_data = [];\n          for (let d of res.data) {\n            let pending = 0;\n            for (let app of d.approval) {\n              if (app.approver._id === AuthService.getCurrentUser().id) {\n                pending += app.status;\n              }\n            }\n            if (pending === 0) {\n              db_data.push({ ...d, show: true });\n            } else {\n              db_data.push({ ...d, show: false });\n            }\n          }\n\n          this.setState({ dbRequests: db_data });\n        }\n      })\n      .catch();\n  }\n\n  handleShowAll() {\n    this.setState({ showAll: !this.state.showAll });\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    return (\n      <div className=\"d-flex align-items-center justify-content-center\">\n        <Switch>\n          <Route\n            exact\n            path=\"/mod/userdetails\"\n            component={() => <UserDetails />}\n          />\n          <Route\n            exact\n            path=\"/mod/role/details\"\n            component={() => <RoleDetails />}\n          />\n          <Route exact path=\"/mod/signup\" component={() => <Signup />} />\n          <Route exact path=\"/mod/users\" component={() => <ManageUsers />} />\n          <Route exact path=\"/mod/roles\" component={() => <ManageRoles />} />\n          <Route exact path=\"/mod/forms\" component={() => <ManageForms />} />\n\n          <Route\n            exact\n            path=\"/mod/roles/create\"\n            component={() => <RoleCreate />}\n          />\n          <Route\n            exact\n            path=\"/mod/form/details\"\n            component={() => <FormDetails />}\n          />\n          <Route\n            exact\n            path=\"/mod/roles/createdepartment\"\n            component={() => <DepartmentCreate />}\n          />\n          <Route\n            exact\n            path=\"/mod/forms/create\"\n            component={() => <FormCreate />}\n          />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nfunction timeStamp(date1, date2) {\n  var val = 0;\n\n  let date_val = new Date(date1);\n\n  val = date2.getTime() - date_val.getTime();\n\n  return Math.floor(val / (1000 * 3600 * 24));\n}\n\nfunction ApprovalRequestsList(props) {\n  if (props.forms) {\n    return props.forms.length !== 0 ? (\n      <div>\n        <div className=\"row mb-3 ms-1 me-1 mt-5\">\n          <div className=\"form-check form-switch col-6\">\n            <label\n              className=\"form-check-label text-light h5 ms-1\"\n              htmlFor=\"flexSwitchCheckDefault\"\n            >\n              Show all\n            </label>\n            <input\n              className=\"form-check-input\"\n              type=\"checkbox\"\n              id=\"flexSwitchCheckDefault\"\n              onChange={props.handleShowAll}\n            ></input>\n          </div>\n          <div className=\"col-6 text-end\">\n            <button className=\"btn btn-outline-success\">Export to Excel</button>\n          </div>\n        </div>\n        <div className=\"list-group request-container overflow-auto\">\n          {props.forms\n            .slice(0)\n            .reverse()\n            .map((data) => {\n              return (\n                <Link\n                  to={\"/form/\" + data._id}\n                  className=\"list-group-item list-group-item-action\"\n                  key={\"Link_\" + data._id}\n                  style={{\n                    display: props.showAll || data.show ? \"block\" : \"none\",\n                  }}\n                >\n                  <div\n                    className=\"d-flex w-100 justify-content-between\"\n                    key={\"div_\" + data._id}\n                  >\n                    <h5 className=\"mb-2\">{data.filled_by}</h5>\n                    <small>\n                      {data.date_submitted\n                        ? timeStamp(data.date_submitted, new Date()) +\n                          \" days ago\"\n                        : \"\"}\n                    </small>\n                  </div>\n                  <p className=\"mb-2\">{data.form.name}</p>\n                  {getApprovalStatuses(data.approval).map((app) => {\n                    return (\n                      <span\n                        className={\"badge rounded-pill mb-1 me-2 \" + app.status}\n                      >\n                        {app.message}\n                      </span>\n                    );\n                  })}\n                </Link>\n              );\n            })}\n        </div>\n      </div>\n    ) : (\n      <div className=\"card request-container mb-3 ms-1 me-1 mt-5\">\n        <p className=\"lead m-2 text-center\">No requests to show.</p>\n      </div>\n    );\n  } else {\n    return <Loading></Loading>;\n  }\n}\n\nfunction getApprovalStatuses(approval) {\n  var approvals = [];\n\n  for (let app of approval) {\n    if (app.status === 1) {\n      // console.log(app.status);\n      approvals.push({\n        status: \"bg-success\",\n        message: app.approver.firstname + \" Approved\",\n      });\n    } else if (app.status === 2) {\n      // console.log(app.firstname);\n      approvals.push({\n        status: \"bg-danger\",\n        message: app.approver.firstname + \" Disapproved\",\n      });\n    }\n  }\n\n  if (approvals.length === 0) {\n    approvals.push({\n      status: \"bg-warning\",\n      message: \"Approval Pending\",\n    });\n  }\n\n  return approvals;\n}\n\nexport default Home;\n","export default __webpack_public_path__ + \"static/media/Beta-HealthcareLG-Trebuchet-MS-font.4688ae12.png\";","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Moment from \"moment\";\n\nimport Loading from \"./Loading\";\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"../images/Beta-HealthcareLG-Trebuchet-MS-font.png\";\n\nfunction FormApproval(props) {\n  //   constructor(props) {\n  //     super(props);\n\n  //     this.state = { name: \"\", formFields: [], formData: [], done: false };\n  //   }\n  const history = useHistory();\n  const { id } = useParams();\n  const [formData, setFormData] = useState([]);\n  const [formDate, setFormDate] = useState(\"\");\n  const [formApproved, setFormApproved] = useState(false);\n  const [formStatus, setFormStatus] = useState(0);\n  const [formComments, setFormComments] = useState(\"\");\n\n  const [clickedApprove, setClickedApprove] = useState(false);\n  const [clickedDisapprove, setClickedDisapprove] = useState(false);\n  const [appError, setAppError] = useState(false);\n\n  useEffect(\n    () => {\n      let isMounted = true;\n      // api\n      //   .get(`/api/getform/${id}`)\n      //   .then((res) => {\n      //     if (res.data && isMounted) {\n      //       setFormData(res.data);\n      //       if (res.data.date_filled) {\n      //         setFormDate(Moment(res.data.date_filled).format(\"DD-MM-YYYY\"));\n      //       }\n      //     }\n      //   })\n      //   .catch((err) => console.log(err));\n\n      const body = {\n        id: id,\n        approver: AuthService.getCurrentUser().id,\n      };\n\n      UserService.getApprovalRequest(body)\n        .then((res) => {\n          if (res.data && isMounted) {\n            setFormData(res.data);\n            if (res.data.date_submitted) {\n              setFormDate(\n                Moment(res.data.date_submitted).format(\"DD/MM/YYYY - h:mm A\")\n              );\n            }\n            if (res.data.approval) {\n              if (res.data.approval.status === 0) {\n                setFormApproved(false);\n                setFormStatus(0);\n                console.log(\"Form not approved\");\n              } else {\n                setFormApproved(true);\n                setFormStatus(res.data.approval.status);\n                setFormComments(res.data.approval.comments);\n                console.log(\"Form already approved!\");\n              }\n            } else {\n              setFormStatus(-1);\n              console.log(\"MOD\");\n            }\n          }\n        })\n        .catch((err) => console.log(err));\n\n      return () => {\n        isMounted = false;\n      };\n    },\n    [id],\n    [formApproved],\n    [formData]\n  );\n\n  function handleApproval(e) {\n    e.preventDefault();\n    setClickedApprove(true);\n    setAppError(false);\n    const body = {\n      request_id: id,\n      approver: AuthService.getCurrentUser().id,\n      action: 1,\n      comments: formComments,\n    };\n\n    UserService.updateApproval(body)\n      .then(() => {\n        setFormApproved(true);\n        setFormStatus(1);\n      })\n      .catch((e) => {\n        setClickedApprove(false);\n        setAppError(true);\n      });\n  }\n\n  function handleDisapproval(e) {\n    e.preventDefault();\n    setClickedDisapprove(true);\n    setAppError(false);\n    const body = {\n      request_id: id,\n      approver: AuthService.getCurrentUser().id,\n      action: 2,\n      comments: formComments,\n    };\n\n    console.log(body);\n\n    UserService.updateApproval(body)\n      .then(() => {\n        setFormApproved(true);\n        setFormStatus(2);\n      })\n      .catch((e) => {\n        setClickedDisapprove(false);\n        setAppError(true);\n      });\n  }\n\n  function handleComments(e) {\n    setFormComments(e.target.value);\n  }\n\n  return formData.length === 0 ? (\n    <Loading />\n  ) : (\n    <div className=\"container-fluid\">\n      <div className=\"container d-flex align-items-center justify-content-center mt-5\">\n        <div className=\"container-form\">\n          <form className=\"card bg-light bg-gradient\">\n            <div className=\"row card-body\">\n              <img src={logo} className=\"img-fluid\" alt=\"logo\"></img>\n            </div>\n            <div className=\"card-header\">\n              <div className=\"card-title\">\n                <h2 className=\"text-center\">\n                  {formData.form.name} - Approval Request\n                </h2>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">\n                  Employee Name:\n                </label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formData.filled_by}\n                    readOnly\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Department:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formData.department}\n                    readOnly\n                  />\n                </div>\n              </div>\n              {formData.fields.map((field) => {\n                return (\n                  <div key={\"div_\" + field._id} className=\"mb-3 row\">\n                    <label\n                      key={\"label_\" + field._id}\n                      className=\"col-sm-4 col-form-label\"\n                    >\n                      {field.name}:\n                    </label>\n                    <div className=\"col-sm-8\">\n                      {field.type.name === \"time\" ? (\n                        <input\n                          key={field._id}\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={Moment(field.value).format(\n                            \"DD/MM/YYYY - h:mm A\"\n                          )}\n                          readOnly\n                        />\n                      ) : (\n                        <input\n                          key={field._id}\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={field.value}\n                          readOnly\n                        />\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Date filled:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formDate}\n                    readOnly\n                  />\n                </div>\n              </div>\n            </div>\n            {formStatus != -1 ? (\n              formApproved ? (\n                <div className=\"card-footer row\">\n                  <p className=\"lead m-2 text-center mb-3\">\n                    This approval request was{\" \"}\n                    {formStatus === 1 ? (\n                      <strong className=\"text-success\">approved </strong>\n                    ) : (\n                      <strong className=\"text-danger\">disapproved </strong>\n                    )}\n                    by you.\n                  </p>\n                  <label className=\"col-sm-4 col-form-label mb-3\">\n                    Comments:\n                  </label>\n                  <div className=\"col-sm-8\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      value={formComments}\n                      readOnly\n                    />\n                  </div>\n                </div>\n              ) : (\n                <div className=\"card-footer\">\n                  <div className=\"form-floating mb-3\">\n                    <textarea\n                      className=\"form-control\"\n                      placeholder=\"comments\"\n                      id=\"floatingTextarea\"\n                      style={{ height: \"100px\", \"max-height\": \"100px\" }}\n                      onChange={handleComments}\n                    ></textarea>\n                    <label className=\"text-muted\" htmlFor=\"floatingTextarea\">\n                      Leave a comment here\n                    </label>\n                  </div>\n\n                  <div className=\"row\">\n                    <div className=\"col-6 text-left\">\n                      {/* <button\n                        className=\"btn btn-outline-danger\"\n                        onClick={handleDisapproval}\n                      >\n                        Disapprove\n                      </button> */}\n                      {clickedDisapprove ? (\n                        <button\n                          className=\"btn btn-danger\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            class=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          Loading...\n                        </button>\n                      ) : (\n                        <button\n                          className=\"btn btn-outline-danger\"\n                          onClick={handleDisapproval}\n                        >\n                          Disapprove\n                        </button>\n                      )}\n                    </div>\n                    <div className=\"col-6 text-end\">\n                      {/* <button\n                        className=\"btn btn-outline-success\"\n                        onClick={handleApproval}\n                      >\n                        Approve\n                      </button> */}\n                      {clickedApprove ? (\n                        <button\n                          className=\"btn btn-success\"\n                          type=\"button\"\n                          disabled\n                        >\n                          <span\n                            class=\"spinner-border spinner-border-sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                          ></span>\n                          Loading...\n                        </button>\n                      ) : (\n                        <button\n                          className=\"btn btn-outline-success\"\n                          onClick={handleApproval}\n                        >\n                          Approve\n                        </button>\n                      )}\n                    </div>\n                    {appError ? (\n                      <div className=\"col-12 text-center text-danger\">\n                        <strong>An error occured. Please try again.</strong>\n                      </div>\n                    ) : (\n                      \"\"\n                    )}\n                  </div>\n                </div>\n              )\n            ) : (\n              <div className=\"card-footer row\">\n                <p className=\"lead m-2 text-center mb-3\">\n                  Your approval is currently not requested.\n                </p>\n              </div>\n            )}\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default FormApproval;\n","import React, { Component } from \"react\";\n\nimport AuthService from \"../services/auth.service\";\nimport FormResult from \"./FormResult\";\nimport { Link } from \"react-router-dom\";\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      message: \"\",\n      invalidLogin: false,\n      clicked_login: false,\n    };\n\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.hideModal = this.hideModal.bind(this);\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n    this.setState({ clicked_login: true });\n    AuthService.login(this.state.username, this.state.password).then(\n      () => {\n        // this.props.history.push(\"/home\");\n        this.setState({ clicked_login: false });\n        window.location.reload();\n      },\n      (error) => {\n        this.setState({ clicked_login: false });\n        this.setState({ invalidLogin: true });\n      }\n    );\n  }\n\n  hideModal() {\n    this.setState({ invalidLogin: false });\n  }\n\n  render() {\n    return (\n      <div className=\"row justify-content-center mt-5\">\n        <div className=\"container-form \">\n          <form\n            className=\"card bg-light bg-gradient\"\n            onSubmit={this.handleLogin}\n          >\n            <div className=\"card-header\">\n              <div className=\"card-title\">\n                <h2 className=\"text-center\">Approver Login</h2>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Username:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    onChange={this.onChangeUsername}\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Password:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"password\"\n                    className=\"form-control\"\n                    onChange={this.onChangePassword}\n                  />\n                </div>\n              </div>\n            </div>\n            {/* {this.state.invalidLogin ? \"Invalid Login\" : \"\"} */}\n            <div className=\"card-footer text-end\">\n              {this.state.clicked_login ? (\n                <button className=\"btn btn-primary\" type=\"button\" disabled>\n                  <span\n                    class=\"spinner-border spinner-border-sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                  ></span>\n                  Loading...\n                </button>\n              ) : (\n                <button className=\"btn btn-outline-primary\">Login</button>\n              )}\n            </div>\n          </form>\n          <FormResult\n            show={this.state.invalidLogin}\n            hideModal={this.hideModal}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Login;\n","import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router\";\nimport Moment from \"moment\";\n\nimport Loading from \"./Loading\";\n// import api from \"../utils/api\";\nimport AuthService from \"../services/auth.service\";\nimport UserService from \"../services/user.service\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from \"../images/Beta-HealthcareLG-Trebuchet-MS-font.png\";\n\nfunction FormView(props) {\n  //   constructor(props) {\n  //     super(props);\n\n  //     this.state = { name: \"\", formFields: [], formData: [], done: false };\n  //   }\n  const history = useHistory();\n  const { id } = useParams();\n  const [formData, setFormData] = useState([]);\n  const [formDate, setFormDate] = useState(\"\");\n  const [formApproved, setFormApproved] = useState(false);\n  const [formStatus, setFormStatus] = useState(0);\n  const [formComments, setFormComments] = useState(\"\");\n\n  const [clickedApprove, setClickedApprove] = useState(false);\n  const [clickedDisapprove, setClickedDisapprove] = useState(false);\n  const [appError, setAppError] = useState(false);\n\n  const [viewerFields, setViewerFields] = useState({});\n\n  useEffect(\n    () => {\n      let isMounted = true;\n      // api\n      //   .get(`/api/getform/${id}`)\n      //   .then((res) => {\n      //     if (res.data && isMounted) {\n      //       setFormData(res.data);\n      //       if (res.data.date_filled) {\n      //         setFormDate(Moment(res.data.date_filled).format(\"DD-MM-YYYY\"));\n      //       }\n      //     }\n      //   })\n      //   .catch((err) => console.log(err));\n\n      const body = {\n        id: id,\n        approver: AuthService.getCurrentUser().id,\n      };\n\n      UserService.getApprovalRequest(body)\n        .then((res) => {\n          if (res.data && isMounted) {\n            setFormData(res.data);\n            if (res.data.date_submitted) {\n              setFormDate(\n                Moment(res.data.date_submitted).format(\"DD/MM/YYYY - h:mm A\")\n              );\n            }\n            if (res.data.approval) {\n              if (res.data.approval.status === 0) {\n                setFormApproved(false);\n                setFormStatus(0);\n                console.log(\"Form not approved\");\n              } else {\n                setFormApproved(true);\n                setFormStatus(res.data.approval.status);\n                setFormComments(res.data.approval.comments);\n                console.log(\"Form already approved!\");\n              }\n            } else {\n              setFormStatus(-1);\n              console.log(\"MOD\");\n            }\n            if (res.data.viewer_fields.length === 0) {\n              UserService.getViewerfields({ id: res.data.form._id }).then(\n                (res) => {\n                  if (res.data && isMounted) {\n                    let view_fields = {};\n                    let view_fields_array = [];\n\n                    res.data.viewer_fields.map((v) => {\n                      view_fields[v._id] = {\n                        id: v._id,\n                        name: v.name,\n                        type: v.type,\n                        value: \"\",\n                        filled: false,\n                      };\n                      view_fields_array.push(view_fields[v._id]);\n                    });\n                    UserService.updateRequestViewerFields({\n                      viewer_fields: view_fields_array,\n                      request_id: id,\n                    });\n                    setViewerFields(view_fields);\n                  }\n                }\n              );\n            } else {\n              let view_fields = {};\n              res.data.viewer_fields.map((v) => {\n                view_fields[v._id] = {\n                  id: v._id,\n                  name: v.name,\n                  type: v.type,\n                  value: v.value,\n                  filled: v.filled,\n                };\n              });\n              setViewerFields(view_fields);\n            }\n          }\n        })\n        .catch((err) => console.log(err));\n\n      return () => {\n        isMounted = false;\n      };\n    },\n    [id],\n    [formApproved],\n    [formData]\n  );\n\n  let handleViewerFieldChange = (val, f_id) => {\n    let current = viewerFields;\n\n    if (!current[f_id].filled) {\n      current[f_id].value = val;\n      current[f_id].filled = true;\n      setViewerFields(current);\n      let current_array = [];\n      Object.keys(current).map((c) => {\n        current_array.push(current[c]);\n      });\n      UserService.updateRequestViewerFields({\n        request_id: id,\n        viewer_fields: current_array,\n      });\n    }\n  };\n\n  return formData.length === 0 ? (\n    <Loading />\n  ) : (\n    <div className=\"container-fluid\">\n      <div className=\"container d-flex align-items-center justify-content-center mt-5\">\n        <div className=\"container-form\">\n          <form className=\"card bg-light bg-gradient\">\n            <div className=\"row card-body\">\n              <img src={logo} className=\"img-fluid\" alt=\"logo\"></img>\n            </div>\n            <div className=\"card-header\">\n              <div className=\"card-title\">\n                <h2 className=\"text-center\">{formData.form.name}</h2>\n              </div>\n            </div>\n            <div className=\"card-body\">\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">\n                  Employee Name:\n                </label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formData.filled_by}\n                    readOnly\n                  />\n                </div>\n              </div>\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Department:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formData.department}\n                    readOnly\n                  />\n                </div>\n              </div>\n              {formData.fields.map((field) => {\n                return (\n                  <div key={\"div_\" + field._id} className=\"mb-3 row\">\n                    <label\n                      key={\"label_\" + field._id}\n                      className=\"col-sm-4 col-form-label\"\n                    >\n                      {field.name}:\n                    </label>\n                    <div className=\"col-sm-8\">\n                      {field.type.name === \"time\" ? (\n                        <input\n                          key={field._id}\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={Moment(field.value).format(\n                            \"DD/MM/YYYY - h:mm A\"\n                          )}\n                          readOnly\n                        />\n                      ) : (\n                        <input\n                          key={field._id}\n                          type=\"text\"\n                          className=\"form-control\"\n                          value={field.value}\n                          readOnly\n                        />\n                      )}\n                    </div>\n                  </div>\n                );\n              })}\n\n              <div className=\"mb-3 row\">\n                <label className=\"col-sm-4 col-form-label\">Date filled:</label>\n                <div className=\"col-sm-8\">\n                  <input\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={formDate}\n                    readOnly\n                  />\n                </div>\n              </div>\n            </div>\n            <div className=\"card-footer row\">\n              {Object.keys(viewerFields).map((field) => {\n                return (\n                  <ViewerField\n                    field={viewerFields[field]}\n                    handleViewerFieldChange={handleViewerFieldChange}\n                  />\n                );\n              })}\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction ViewerField(props) {\n  const [fieldValue, setFieldValue] = useState(props.field.value);\n  const [filled, setFilled] = useState(props.field.filled);\n\n  useEffect(() => {}, [props, fieldValue, filled]);\n\n  if (props.field.type.name == \"button-time\") {\n    return (\n      <div className=\"col-6 mb-3\">\n        {filled ? (\n          <button className=\"btn btn-outline-primary btn-sm m-2\" disabled>\n            {props.field.name}\n          </button>\n        ) : (\n          <button\n            className=\"btn btn-outline-primary btn-sm m-2\"\n            onClick={(e) => {\n              e.preventDefault();\n              const date = new Date();\n              setFilled(true);\n              setFieldValue(date);\n              props.handleViewerFieldChange(date, props.field.id);\n            }}\n          >\n            {props.field.name}\n          </button>\n        )}\n\n        {fieldValue ? (\n          <input\n            key={props.field.id}\n            type=\"text\"\n            className=\"form-control\"\n            value={Moment(fieldValue).format(\"DD/MM/YYYY - h:mm A\")}\n            readOnly\n          />\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default FormView;\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Component } from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\n\nimport AuthService from \"./services/auth.service\";\n\nimport \"./App.css\";\nimport Home from \"./components/Home\";\nimport HomeMod from \"./components/HomeMod\";\nimport FormApproval from \"./components/FormApproval\";\nimport Login from \"./components/Login\";\nimport Loading from \"./components/Loading\";\nimport Dashboard from \"./components/Dashboard\";\nimport FormView from \"./components/FormView\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      currentUser: null,\n    };\n  }\n\n  componentDidMount() {\n    const user = AuthService.getCurrentUser();\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n      });\n    }\n  }\n\n  render() {\n    const { currentUser } = this.state;\n\n    if (!currentUser) {\n      return (\n        <div className=\"container align-items-center justify-content-center\">\n          <Switch>\n            <Route path=\"/\" component={() => <Login />} />\n          </Switch>\n        </div>\n      );\n    } else if (currentUser && currentUser.role.level === 4) {\n      return (\n        <div>\n          <div className=\"container-fluid\">\n            <nav className=\"row navbar navbar-light bg-dark rounded shadow-lg\">\n              <div className=\"col-4\">\n                <p className=\"navbar-brand text-light mt-1\">\n                  Welcome, {AuthService.getCurrentUser().firstname}!\n                </p>\n              </div>\n              <div className=\"col text-end\">\n                <Link className=\"btn btn-outline-light\" to=\"/\">\n                  Home\n                </Link>\n                <Link to=\"/dashboard\" className=\"btn btn-outline-warning ms-2\">\n                  Status Dashboard\n                </Link>\n                <Link to=\"/mod/users\" className=\"btn btn-outline-info ms-2\">\n                  Manage Users\n                </Link>\n                <Link to=\"/mod/forms\" className=\"btn btn-outline-info ms-2\">\n                  Manage Forms\n                </Link>\n                <button\n                  className=\"btn btn-outline-danger ms-2\"\n                  onClick={() => {\n                    AuthService.logout();\n                    window.location.replace(\"/\");\n                  }}\n                >\n                  Logout\n                </button>\n              </div>\n            </nav>\n          </div>\n          <Switch>\n            <Route path=\"/\" component={() => <HomeMod />} />\n            <Route exact path=\"/form/:id\" component={() => <FormApproval />} />\n          </Switch>\n          <div className=\"container align-items-center justify-content-center\">\n            <Switch>\n              <Route\n                exact\n                path=\"/dashboard\"\n                component={() => <Dashboard />}\n              ></Route>\n            </Switch>\n          </div>\n        </div>\n      );\n    } else if (currentUser && currentUser.role.level === 0) {\n      return (\n        <div className=\"\">\n          <div className=\"container-fluid\">\n            <nav className=\"row navbar navbar-light bg-dark rounded shadow-lg\">\n              <div className=\"col-4\">\n                <p className=\"navbar-brand text-light mt-1\">\n                  Welcome, {AuthService.getCurrentUser().firstname}!\n                </p>\n              </div>\n              <div className=\"col text-end\">\n                <Link to=\"/\" className=\"btn btn-outline-warning ms-2\">\n                  Status Dashboard\n                </Link>\n                <button\n                  className=\"btn btn-outline-danger ms-2\"\n                  onClick={() => {\n                    AuthService.logout();\n                    window.location.replace(\"/\");\n                  }}\n                >\n                  Logout\n                </button>\n              </div>\n            </nav>\n          </div>\n          <div className=\"container align-items-center justify-content-center\">\n            <Switch>\n              <Route exact path=\"/\" component={() => <Dashboard />}></Route>\n              <Route\n                exact\n                path=\"/viewform/:id\"\n                component={() => <FormView />}\n              />\n            </Switch>\n          </div>\n        </div>\n      );\n    } else if (currentUser && currentUser.role.level) {\n      return (\n        <div>\n          <div className=\"container-fluid\">\n            <nav className=\"row navbar navbar-light bg-dark rounded shadow-lg\">\n              <div className=\"col-4\">\n                <p className=\"navbar-brand text-light mt-1\">\n                  Welcome, {AuthService.getCurrentUser().firstname}!\n                </p>\n              </div>\n              <div className=\"col text-end\">\n                <Link className=\"btn btn-outline-light\" to=\"/\">\n                  Home\n                </Link>\n                <Link to=\"/dashboard\" className=\"btn btn-outline-warning ms-2\">\n                  Status Dashboard\n                </Link>\n                <button\n                  className=\"btn btn-outline-danger ms-2\"\n                  onClick={() => {\n                    AuthService.logout();\n                    window.location.reload();\n                  }}\n                >\n                  Logout\n                </button>\n              </div>\n            </nav>\n          </div>\n          <Switch>\n            <Route exact path=\"/\" component={() => <Home />} />\n            {/* <Route exact path=\"/home\" component={() => <Home />} /> */}\n\n            <Route exact path=\"/form/:id\" component={() => <FormApproval />} />\n          </Switch>\n          <div className=\"container align-items-center justify-content-center\">\n            <Switch>\n              <Route\n                exact\n                path=\"/dashboard\"\n                component={() => <Dashboard />}\n              ></Route>\n            </Switch>\n          </div>\n        </div>\n      );\n    } else {\n      AuthService.logout();\n    }\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport Dashboard from \"./components/Dashboard\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","module.exports = {\n  ADDR: \"\",\n};\n"],"sourceRoot":""}